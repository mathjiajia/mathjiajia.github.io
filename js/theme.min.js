(()=>{var J=(e,o)=>()=>(o||e((o={exports:{}}).exports,o),o.exports);var P=J((he,G)=>{G.exports=window.Tablesort});var W=P();function X(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}function N(e,o){e=e||[];for(let t=0;t<e.length;t++)o(e[t])}function K(){return document.documentElement&&document.documentElement.scrollTop||document.body.scrollTop}function Y(){let e=document.getElementById("menu-toggle-mobile"),o=document.getElementById("menu-mobile");window.menuToggleMobileEventListener||(e.addEventListener("click",()=>{document.body.classList.toggle("blur"),e.classList.toggle("active"),o.classList.toggle("active")}),window.menuToggleMobileEventListener=!0),window._menuMobileOnClickMask=()=>{e.classList.remove("active"),o.classList.remove("active")},window.clickMaskEventSet.add(window._menuMobileOnClickMask)}function I(e){window.setTheme(e),window.saveTheme(e)}function Z(){Array.from(document.getElementsByClassName("theme-switch")).forEach(e=>{e.addEventListener("click",()=>{let o=document.body.getAttribute("theme");I(o==="dark"?"light":"dark");for(let t of window.switchThemeEventSet)t()})})}function Q(){Array.from(document.getElementsByClassName("color-theme-select")).forEach(e=>{let o=document.body.getAttribute("theme");for(let t=0;t<e.options.length;t++)if(e.options[t].value===o){e.selectedIndex=t;break}e.addEventListener("change",()=>{let t=e.value;window.localStorage&&localStorage.setItem("theme",t),t!=="auto"?I(t):window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches?I("dark"):I("light");for(let n of window.switchThemeEventSet)n()})})}function U(){let e=window.config.search,o=window.matchMedia&&window.matchMedia("only screen and (max-width: 680px)").matches;if(!e||o&&window._searchMobileOnce||!o&&window._searchDesktopOnce)return;let t=e.maxResultLength?e.maxResultLength:10,n=e.snippetLength?e.snippetLength:50,s=e.highlightTag?e.highlightTag:"em",l=e.isCaseSensitive?e.isCaseSensitive:!1,a=e.minMatchCharLength?e.minMatchCharLength:1,d=e.findAllMatches?e.findAllMatches:!1,m=e.location?e.location:0,M=e.threshold?e.threshold:.3,_=e.distance?e.distance:100,b=e.ignoreLocation?e.ignoreLocation:!1,A=e.useExtendedSearch?e.useExtendedSearch:!1,B=e.ignoreFieldNorm?e.ignoreFieldNorm:!1,r=o?"mobile":"desktop",T=document.getElementById(`header-${r}`),i=document.getElementById(`search-input-${r}`),O=document.getElementById(`search-toggle-${r}`),x=document.getElementById(`search-loading-${r}`),f=document.getElementById(`search-clear-${r}`),q=window.config["autocomplete.min.js"],z=window.config["algoliasearch.min.js"],F=window.config["fuse.min.js"];o?(window._searchMobileOnce=!0,i.addEventListener("focus",()=>{C("autocomplete-script",q,()=>{j(),i.focus()}),window.config?.search?.type==="algolia"?C("algolia-script",z,null):C("fuse-script",F,null),document.body.classList.add("blur"),T.classList.add("open"),i.focus()}),document.getElementById("search-cancel-mobile").addEventListener("click",()=>{T.classList.remove("open"),document.body.classList.remove("blur"),document.getElementById("menu-toggle-mobile").classList.remove("active"),document.getElementById("menu-mobile").classList.remove("active"),x.style.display="none",f.style.display="none",window._searchMobile&&window._searchMobile.autocomplete.setVal("")}),f.addEventListener("click",()=>{f.style.display="none",window._searchMobile&&window._searchMobile.autocomplete.setVal("")},!1),window._searchMobileOnClickMask=()=>{T.classList.remove("open"),x.style.display="none",f.style.display="none",window._searchMobile&&window._searchMobile.autocomplete.setVal("")},window.clickMaskEventSet.add(window._searchMobileOnClickMask)):(window._searchDesktopOnce=!0,O.addEventListener("click",()=>{C("autocomplete-script",q,()=>{j(),i.focus()}),window.config?.search?.type==="algolia"?C("algolia-script",z,null):C("fuse-script",F,null),document.body.classList.add("blur"),T.classList.add("open"),i.focus()}),f.addEventListener("click",()=>{f.style.display="none",window._searchDesktop&&window._searchDesktop.autocomplete.setVal("")}),document.addEventListener("keydown",v=>{v.ctrlKey&&v.code==="KeyK"&&(v.preventDefault(),O.click())}),window._searchDesktopOnClickMask=()=>{T.classList.remove("open"),x.style.display="none",f.style.display="none",window._searchDesktop&&window._searchDesktop.autocomplete.setVal("")},window.clickMaskEventSet.add(window._searchDesktopOnClickMask)),i.addEventListener("input",()=>{i.value===""?f.style.display="none":f.style.display="inline"});let j=()=>{let v=autocomplete(`#search-input-${r}`,{hint:!1,autoselect:!0,dropdownMenuContainer:`#search-dropdown-${r}`,clearOnSelected:!1,cssClasses:{noPrefix:!0},debug:!0},{name:"search",source:(h,L)=>{x.style.display="inline",f.style.display="none";let g=c=>{x.style.display="none",f.style.display="inline",L(c)};if(e.type==="algolia")window._algoliaIndex=window._algoliaIndex||algoliasearch(e.algoliaAppID,e.algoliaSearchKey).initIndex(e.algoliaIndex),window._algoliaIndex.search(h,{offset:0,length:t*8,attributesToHighlight:["title"],attributesToRetrieve:["*"],attributesToSnippet:[`content:${n}`],highlightPreTag:`<${s}>`,highlightPostTag:`</${s}>`}).then(({hits:c})=>{let w={};c.forEach(({uri:p,date:R,_highlightResult:{title:H},_snippetResult:{content:S}})=>{w[p]&&w[p].context.length>S.value||(w[p]={uri:p,title:H.value,date:R,context:S.value})}),g(Object.values(w).slice(0,t))}).catch(c=>{console.error(c),g([])});else if(e.type==="fuse"){let c=()=>{let w={};return window._index.search(h).forEach(({item:p,refIndex:R,matches:H})=>{let S=p.title,k=p.content;H.forEach(({indices:E,value:ue,key:V})=>{if(V==="content"){let y=0;for(let u=0;u<E.length;u++){let $=k.substring(E[u][0]+y,E[u][1]+1+y),D=`<${s}>`+$+`</${s}>`;k=k.substring(0,E[u][0]+y)+D+k.substring(E[u][1]+1+y,k.length),y+=s.length*2+5}}else if(V==="title"){let y=0;for(let u=0;u<E.length;u++){let $=S.substring(E[u][0]+y,E[u][1]+1+y),D=`<${s}>`+$+`</${s}>`;S=S.substring(0,E[u][0]+y)+D+S.substring(E[u][1]+1+y,k.length),y+=s.length*2+5}}}),w[p.uri]={uri:p.uri,title:S,date:p.date,context:k}}),Object.values(w).slice(0,t)};window._index?g(c()):fetch(e.fuseIndexURL).then(w=>w.json()).then(w=>{let p={isCaseSensitive:l,findAllMatches:d,minMatchCharLength:a,location:m,threshold:M,distance:_,ignoreLocation:b,useExtendedSearch:A,ignoreFieldNorm:B,includeScore:!1,shouldSort:!0,includeMatches:!0,keys:["content","title"]};window._index=new Fuse(w,p),g(c())}).catch(w=>{console.error(w),g([])})}},templates:{suggestion:({title:h,uri:L,date:g,context:c})=>`<div><a href=${L}><span class="suggestion-title">${h}</span></a><span class="suggestion-date">${g}</span></div><div class="suggestion-context">${c}</div>`,empty:({query:h})=>`<div class="search-empty">${e.noResultsFound}: <span class="search-query">"${X(h)}"</span></div>`,footer:()=>{let{searchType:h,icon:L,href:g}=e.type==="algolia"?{searchType:"algolia",icon:'<svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M229.3 182.6c-49.3 0-89.2 39.9-89.2 89.2 0 49.3 39.9 89.2 89.2 89.2s89.2-39.9 89.2-89.2c0-49.3-40-89.2-89.2-89.2zm62.7 56.6l-58.9 30.6c-1.8.9-3.8-.4-3.8-2.3V201c0-1.5 1.3-2.7 2.7-2.6 26.2 1 48.9 15.7 61.1 37.1.7 1.3.2 3-1.1 3.7zM389.1 32H58.9C26.4 32 0 58.4 0 90.9V421c0 32.6 26.4 59 58.9 59H389c32.6 0 58.9-26.4 58.9-58.9V90.9C448 58.4 421.6 32 389.1 32zm-202.6 84.7c0-10.8 8.7-19.5 19.5-19.5h45.3c10.8 0 19.5 8.7 19.5 19.5v15.4c0 1.8-1.7 3-3.3 2.5-12.3-3.4-25.1-5.1-38.1-5.1-13.5 0-26.7 1.8-39.4 5.5-1.7.5-3.4-.8-3.4-2.5v-15.8zm-84.4 37l9.2-9.2c7.6-7.6 19.9-7.6 27.5 0l7.7 7.7c1.1 1.1 1 3-.3 4-6.2 4.5-12.1 9.4-17.6 14.9-5.4 5.4-10.4 11.3-14.8 17.4-1 1.3-2.9 1.5-4 .3l-7.7-7.7c-7.6-7.5-7.6-19.8 0-27.4zm127.2 244.8c-70 0-126.6-56.7-126.6-126.6s56.7-126.6 126.6-126.6c70 0 126.6 56.6 126.6 126.6 0 69.8-56.7 126.6-126.6 126.6z"/></svg>',href:"https://www.algolia.com/"}:{searchType:"Fuse.js",icon:"",href:"https://fusejs.io/"};return`<div class="search-footer">Search by <a href="${g}" rel="noopener noreffer" target="_blank">${L} ${h}</a></div>`}}});v.on("autocomplete:selected",(h,L,g,c)=>{h.preventDefault()}),o?window._searchMobile=v:window._searchDesktop=v};function C(v,h,L){if(document.querySelector(`#${v}`)===null){let g=document.querySelector("head"),c=document.createElement("script");c.setAttribute("src",h),c.setAttribute("id",v),c.onload=L,g.appendChild(c)}}}function ee(){document.querySelectorAll(".details").forEach(e=>{let o=e.getElementsByClassName("details-summary")[0],t=o.nextElementSibling;e.classList.contains("open")&&(t.style.maxHeight=t.scrollHeight+"px"),o.addEventListener("click",()=>{e.classList.contains("open")?t.style.maxHeight="0px":t.style.maxHeight=t.scrollHeight+"px",e.classList.toggle("open")},!1),addEventListener("beforeprint",()=>{e.classList.contains("open")||o.click()})})}function te(){window.config.lightGallery&&lightGallery(document.getElementById("content"),window.config.lightGallery)}function oe(){N(document.querySelectorAll(".content table"),e=>{let o=document.createElement("div");o.className="table-wrapper",e.parentElement.replaceChild(o,e),o.appendChild(e),window.config?.table?.sort&&new W(e)})}function ne(){let e=document.getElementById("TableOfContents");if(e===null)return;let o=window.matchMedia&&window.matchMedia("only screen and (max-width: 1000px)").matches;if(document.getElementById("toc-static").getAttribute("kept")||o)window._tocOnScroll&&window.scrollEventSet.delete(window._tocOnScroll);else{let t=document.getElementById("toc-auto"),n=e.querySelectorAll("a:first-child"),s=e.getElementsByTagName("li"),l=document.getElementsByClassName("headerLink"),a=document.body.getAttribute("header-desktop")!=="normal",d=document.getElementById("header-desktop").offsetHeight,m=20+(a?d:0),M=t.offsetTop,_=M-m+(a?0:d);window._tocOnScroll=window._tocOnScroll||(()=>{let A=document.getElementById("post-footer").offsetTop-t.getBoundingClientRect().height,B=A-m+(a?0:d);if(window.newScrollTop<_?(t.style.position="absolute",t.style.top=`${M}px`):window.newScrollTop>B?(t.style.position="absolute",t.style.top=`${A}px`):(t.style.position="fixed",t.style.top=`${m}px`),n.length===0)return;let r=-1,T=m+window.newScrollTop;if(l[l.length-1].offsetTop<T)r=l.length-1;else for(let i=0;i<l.length-1;i++){let O=l[i].offsetTop,x=l[i+1].offsetTop;if(O<=T&&x>T){r=i;break}}if(Array.from(n).forEach(i=>i.classList.remove("active")),Array.from(s).forEach(i=>i.classList.remove("has-active")),r>=0&&r<n.length){n[r].classList.add("active");let i=n[r].parentElement;for(;i!==e;)i.classList.add("has-active"),i=i.parentElement.parentElement}}),window._tocOnScroll(),window.scrollEventSet.add(window._tocOnScroll)}}function se(){window.config.mapbox&&(mapboxgl.accessToken=window.config.mapbox.accessToken,mapboxgl.setRTLTextPlugin(window.config.mapbox.RTLTextPlugin),window._mapboxArr=window._mapboxArr||[],N(document.getElementsByClassName("mapbox"),e=>{let{lng:o,lat:t,zoom:n,lightStyle:s,darkStyle:l,marked:a,navigation:d,geolocate:m,scale:M,fullscreen:_}=window.config.data[e.id],b=new mapboxgl.Map({container:e,center:[o,t],zoom:n,minZoom:.2,style:window.isDark?l:s,attributionControl:!1});a&&new mapboxgl.Marker().setLngLat([o,t]).addTo(b),d&&b.addControl(new mapboxgl.NavigationControl,"bottom-right"),m&&b.addControl(new mapboxgl.GeolocateControl({positionOptions:{enableHighAccuracy:!0},showUserLocation:!0,trackUserLocation:!0}),"bottom-right"),M&&b.addControl(new mapboxgl.ScaleControl),_&&b.addControl(new mapboxgl.FullscreenControl),b.addControl(new MapboxLanguage),window._mapboxArr.push(b)}),window._mapboxOnSwitchTheme=()=>{N(window._mapboxArr,e=>{let o=e.getContainer(),{lightStyle:t,darkStyle:n}=window.config.data[o.id];e.setStyle(window.isDark?n:t),e.addControl(new MapboxLanguage)})},window.switchThemeEventSet.add(window._mapboxOnSwitchTheme))}function ie(){if(window.config.typeit){let e=window.config.typeit,o=e.speed?e.speed:100,t=e.cursorSpeed?e.cursorSpeed:1e3,n=e.cursorChar?e.cursorChar:"|";Object.values(e.data).forEach(s=>{let l=a=>{let d=s[a];if(!document.getElementById(d).hasAttribute("data-typeit-id")){let m=new TypeIt(`#${d}`,{strings:window.config.data[d],speed:o,lifeLike:!0,cursorSpeed:t,cursorChar:n,waitUntilVisible:!0,afterComplete:()=>{if(a===s.length-1){e.duration>=0&&window.setTimeout(()=>{m.destroy()},e.duration);return}m.destroy(),l(a+1)}}).go()}};l(0)})}}function le(){function e(n){let s=document.getElementsByTagName("meta");for(let l=0;l<s.length;l++)if(s[l].getAttribute("name")===n)return s[l]}let o=e("theme-color"),t={light:"#f8f8f8",dark:"#161b22"};window._metaThemeColorOnSwitchTheme=()=>{o.content=t[document.body.getAttribute("theme")]},window.switchThemeEventSet.add(window._metaThemeColorOnSwitchTheme),window._metaThemeColorOnSwitchTheme()}function ce(){let e=document.getElementById("back-to-top-button");function o(){window.newScrollTop=K(),window.newScrollTop>20?e.style.opacity="1":e.style.opacity="0";for(let t of window.scrollEventSet)t();window.oldScrollTop=window.newScrollTop}window.addEventListener("scroll",o,!1)}function ae(){window.addEventListener("resize",()=>{window._resizeTimeout||(window._resizeTimeout=window.setTimeout(()=>{window._resizeTimeout=null;for(let e of window.resizeEventSet)e();U()},100))},!1)}function re(){document.getElementById("mask").addEventListener("click",()=>{for(let e of window.clickMaskEventSet)e();document.body.classList.remove("blur")},!1)}function de(){document.querySelectorAll(".code-block").forEach(e=>{let o=e.querySelector("div.code-block-title-bar"),t=e.querySelector("code.chroma"),n=e.querySelector("button.copy-code-button"),s=n.querySelector("span.copy-icon"),l=n.querySelector("span.check-icon"),a=e.querySelector("button.wrap-code-button"),d=e.querySelector("button.line-number-button");t.style.maxHeight=t.scrollHeight+10+"px",o.addEventListener("click",()=>{e.classList.toggle("is-open"),e.classList.toggle("is-closed")}),n?.addEventListener("click",()=>{navigator.clipboard.writeText(t.textContent),s.style.display="none",l.style.display="block",setTimeout(()=>{s.style.display="block",l.style.display="none"},3e3)}),a?.addEventListener("click",()=>{t.style.maxHeight="fit-content",e.classList.toggle("is-wrap"),t.style.maxHeight=t.scrollHeight+10+"px"}),d.addEventListener("click",()=>{e.classList.toggle("show-line-numbers")}),addEventListener("beforeprint",m=>{e.classList.contains("is-closed")&&o.click(),e.classList.contains("is-wrap")||a.click()})})}function we(){window.isDark=document.body.getAttribute("theme")!=="light",window.newScrollTop=K(),window.oldScrollTop=window.newScrollTop,window.scrollEventSet=new Set,window.resizeEventSet=new Set,window.clickMaskEventSet=new Set,window.objectFitImages&&objectFitImages(),Y(),Z(),Q(),le(),U(),de(),ee(),te(),oe(),ie(),se(),ne(),ce(),ae(),re()}we();})();
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibnMtaHVnbzovVXNlcnMvamlhL215c2l0ZS90aGVtZXMvRG9JdC9hc3NldHMvanMvc2hpbXMvdGFibGVzb3J0LmpzIiwgIjxzdGRpbj4iXSwKICAic291cmNlc0NvbnRlbnQiOiBbIm1vZHVsZS5leHBvcnRzID0gd2luZG93LlRhYmxlc29ydDtcbiIsICJleHBvcnQge307XG5cbi8vIFRPRE86IGFkZCBtb3JlIGdsb2JhbCBzdGF0ZXMgdG8gdGhlIHdpbmRvdyBvYmplY3RcbmRlY2xhcmUgZ2xvYmFsIHtcbiAgaW50ZXJmYWNlIFdpbmRvdyB7XG4gICAgaXNEYXJrOiBib29sZWFuO1xuICB9XG59XG5cbi8qIGVzbGludC1kaXNhYmxlIG5vLW5ldyAqL1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW5kZWYgKi9cbmNvbnN0IFRhYmxlc29ydCA9IHJlcXVpcmUoXCJ0YWJsZXNvcnRcIik7XG4vLyBjb25zdCBhdXRvY29tcGxldGUgPSByZXF1aXJlKCdhdXRvY29tcGxldGUuanMnKVxuXG5mdW5jdGlvbiBlc2NhcGUodW5zYWZlKSB7XG4gIHJldHVybiB1bnNhZmVcbiAgICAucmVwbGFjZSgvJi9nLCBcIiZhbXA7XCIpXG4gICAgLnJlcGxhY2UoLzwvZywgXCImbHQ7XCIpXG4gICAgLnJlcGxhY2UoLz4vZywgXCImZ3Q7XCIpXG4gICAgLnJlcGxhY2UoL1wiL2csIFwiJnF1b3Q7XCIpXG4gICAgLnJlcGxhY2UoLycvZywgXCImIzAzOTtcIik7XG59XG5cbmZ1bmN0aW9uIGZvckVhY2goZWxlbWVudHMsIGhhbmRsZXIpIHtcbiAgZWxlbWVudHMgPSBlbGVtZW50cyB8fCBbXTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBlbGVtZW50cy5sZW5ndGg7IGkrKykgaGFuZGxlcihlbGVtZW50c1tpXSk7XG59XG5cbmZ1bmN0aW9uIGdldFNjcm9sbFRvcCgpIHtcbiAgcmV0dXJuIChcbiAgICAoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50ICYmIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3ApIHx8XG4gICAgZG9jdW1lbnQuYm9keS5zY3JvbGxUb3BcbiAgKTtcbn1cblxuZnVuY3Rpb24gaXNNb2JpbGVXaW5kb3coKSB7XG4gIHJldHVybiB3aW5kb3cubWF0Y2hNZWRpYShcIm9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2ODBweClcIikubWF0Y2hlcztcbn1cblxuLyoqXG4gKiBJbml0aWFsaXplIHRoZSBtb2JpbGUgbWVudSBiYXIuXG4gKi9cbmZ1bmN0aW9uIGluaXRNZW51TW9iaWxlKCkge1xuICBjb25zdCBtZW51VG9nZ2xlTW9iaWxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtZW51LXRvZ2dsZS1tb2JpbGVcIik7XG4gIGNvbnN0IG1lbnVNb2JpbGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1lbnUtbW9iaWxlXCIpO1xuICAvLyBJZiBubyBldmVudCBsaXN0ZW5lciBoYXMgYmVlbiByZWdpc3RlcmVkIHlldCwgYWRkIG9uZS5cbiAgaWYgKCF3aW5kb3cubWVudVRvZ2dsZU1vYmlsZUV2ZW50TGlzdGVuZXIpIHtcbiAgICBtZW51VG9nZ2xlTW9iaWxlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC50b2dnbGUoXCJibHVyXCIpO1xuICAgICAgbWVudVRvZ2dsZU1vYmlsZS5jbGFzc0xpc3QudG9nZ2xlKFwiYWN0aXZlXCIpO1xuICAgICAgbWVudU1vYmlsZS5jbGFzc0xpc3QudG9nZ2xlKFwiYWN0aXZlXCIpO1xuICAgIH0pO1xuICAgIHdpbmRvdy5tZW51VG9nZ2xlTW9iaWxlRXZlbnRMaXN0ZW5lciA9IHRydWU7XG4gIH1cbiAgLy8gUmVtb3ZlIHRoZSBtYXNrIHdoZW4gY2xpY2sgb24gaXQuXG4gIHdpbmRvdy5fbWVudU1vYmlsZU9uQ2xpY2tNYXNrID0gKCkgPT4ge1xuICAgIG1lbnVUb2dnbGVNb2JpbGUuY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKTtcbiAgICBtZW51TW9iaWxlLmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIik7XG4gIH07XG4gIHdpbmRvdy5jbGlja01hc2tFdmVudFNldC5hZGQod2luZG93Ll9tZW51TW9iaWxlT25DbGlja01hc2spO1xufVxuXG4vKipcbiAqIFNldCB0aGUgY29sb3IgdGhlbWVcbiAqIEBwYXJhbSB7c3RyaW5nfSB0aGVtZVxuICovXG5mdW5jdGlvbiBzZXRDb2xvclRoZW1lKHRoZW1lKSB7XG4gIHdpbmRvdy5zZXRUaGVtZSh0aGVtZSk7XG4gIHdpbmRvdy5zYXZlVGhlbWUodGhlbWUpO1xufVxuXG4vKipcbiAqIEluaXRpYWxpemUgdGhlIHN3aXRjaCB0aGVtZSBidXR0b24uXG4gKi9cbmZ1bmN0aW9uIGluaXRTd2l0Y2hUaGVtZSgpIHtcbiAgQXJyYXkuZnJvbShkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwidGhlbWUtc3dpdGNoXCIpKS5mb3JFYWNoKFxuICAgICh0aGVtZVN3aXRjaCkgPT4ge1xuICAgICAgdGhlbWVTd2l0Y2guYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgY29uc3QgY3VycmVudFRoZW1lID0gZG9jdW1lbnQuYm9keS5nZXRBdHRyaWJ1dGUoXCJ0aGVtZVwiKTtcbiAgICAgICAgaWYgKGN1cnJlbnRUaGVtZSA9PT0gXCJkYXJrXCIpIHtcbiAgICAgICAgICBzZXRDb2xvclRoZW1lKFwibGlnaHRcIik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc2V0Q29sb3JUaGVtZShcImRhcmtcIik7XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChjb25zdCBldmVudCBvZiB3aW5kb3cuc3dpdGNoVGhlbWVFdmVudFNldCkgZXZlbnQoKTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICk7XG59XG5cbi8qKlxuICogSW5pdGlhbGl6ZSB0aGUgc2VsZWN0IHRoZW1lIGJ1dHRvbi5cbiAqL1xuZnVuY3Rpb24gaW5pdFNlbGVjdFRoZW1lKCkge1xuICBBcnJheS5mcm9tKGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJjb2xvci10aGVtZS1zZWxlY3RcIikpLmZvckVhY2goXG4gICAgKHRoZW1lU2VsZWN0KSA9PiB7XG4gICAgICAvLyBHZXQgdGhlIGN1cnJlbnQgdGhlbWVcbiAgICAgIGNvbnN0IGN1cnJlbnRUaGVtZSA9IGRvY3VtZW50LmJvZHkuZ2V0QXR0cmlidXRlKFwidGhlbWVcIik7XG4gICAgICAvLyBTZXQgdGhlIHNlbGVjdGVkIEluZGV4XG4gICAgICBmb3IgKGxldCBqID0gMDsgaiA8IHRoZW1lU2VsZWN0Lm9wdGlvbnMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgY29uc3QgaSA9IHRoZW1lU2VsZWN0Lm9wdGlvbnNbal07XG4gICAgICAgIGlmIChpLnZhbHVlID09PSBjdXJyZW50VGhlbWUpIHtcbiAgICAgICAgICB0aGVtZVNlbGVjdC5zZWxlY3RlZEluZGV4ID0gajtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB0aGVtZVNlbGVjdC5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsICgpID0+IHtcbiAgICAgICAgY29uc3QgdGhlbWUgPSB0aGVtZVNlbGVjdC52YWx1ZTtcbiAgICAgICAgd2luZG93LmxvY2FsU3RvcmFnZSAmJiBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcInRoZW1lXCIsIHRoZW1lKTtcbiAgICAgICAgaWYgKHRoZW1lICE9PSBcImF1dG9cIikge1xuICAgICAgICAgIHNldENvbG9yVGhlbWUodGhlbWUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmIChcbiAgICAgICAgICAgIHdpbmRvdy5tYXRjaE1lZGlhICYmXG4gICAgICAgICAgICB3aW5kb3cubWF0Y2hNZWRpYShcIihwcmVmZXJzLWNvbG9yLXNjaGVtZTogZGFyaylcIikubWF0Y2hlc1xuICAgICAgICAgICkge1xuICAgICAgICAgICAgc2V0Q29sb3JUaGVtZShcImRhcmtcIik7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNldENvbG9yVGhlbWUoXCJsaWdodFwiKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChjb25zdCBldmVudCBvZiB3aW5kb3cuc3dpdGNoVGhlbWVFdmVudFNldCkgZXZlbnQoKTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICk7XG59XG5cbi8qKlxuICogSW5pdGlhbGl6ZSB0aGUgc2VhcmNoIGJveC5cbiAqIEByZXR1cm5zIHtudWxsfVxuICovXG5mdW5jdGlvbiBpbml0U2VhcmNoKCkge1xuICBjb25zdCBzZWFyY2hDb25maWcgPSB3aW5kb3cuY29uZmlnLnNlYXJjaDtcbiAgY29uc3QgaXNNb2JpbGUgPVxuICAgIHdpbmRvdy5tYXRjaE1lZGlhICYmXG4gICAgd2luZG93Lm1hdGNoTWVkaWEoXCJvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjgwcHgpXCIpLm1hdGNoZXM7XG4gIC8vIElmIHRoZXJlIGlzIG5vIHNlYXJjaCBjb25maWdcbiAgLy8gT3IgdGhlIHNlYXJjaCBoYXMgYmVlbiBpbml0aWFsaXplZCBhbHJlYWR5XG4gIC8vIFJldHVybiBkaXJlY3RseVxuICBpZiAoXG4gICAgIXNlYXJjaENvbmZpZyB8fFxuICAgIChpc01vYmlsZSAmJiB3aW5kb3cuX3NlYXJjaE1vYmlsZU9uY2UpIHx8XG4gICAgKCFpc01vYmlsZSAmJiB3aW5kb3cuX3NlYXJjaERlc2t0b3BPbmNlKVxuICApXG4gICAgcmV0dXJuO1xuXG4gIC8vIEluaXRpYWxpemUgZGVmYXVsdCBzZWFyY2ggY29uZmlnXG4gIGNvbnN0IG1heFJlc3VsdExlbmd0aCA9IHNlYXJjaENvbmZpZy5tYXhSZXN1bHRMZW5ndGhcbiAgICA/IHNlYXJjaENvbmZpZy5tYXhSZXN1bHRMZW5ndGhcbiAgICA6IDEwO1xuICBjb25zdCBzbmlwcGV0TGVuZ3RoID0gc2VhcmNoQ29uZmlnLnNuaXBwZXRMZW5ndGhcbiAgICA/IHNlYXJjaENvbmZpZy5zbmlwcGV0TGVuZ3RoXG4gICAgOiA1MDtcbiAgY29uc3QgaGlnaGxpZ2h0VGFnID0gc2VhcmNoQ29uZmlnLmhpZ2hsaWdodFRhZ1xuICAgID8gc2VhcmNoQ29uZmlnLmhpZ2hsaWdodFRhZ1xuICAgIDogXCJlbVwiO1xuICBjb25zdCBpc0Nhc2VTZW5zaXRpdmUgPSBzZWFyY2hDb25maWcuaXNDYXNlU2Vuc2l0aXZlXG4gICAgPyBzZWFyY2hDb25maWcuaXNDYXNlU2Vuc2l0aXZlXG4gICAgOiBmYWxzZTtcbiAgY29uc3QgbWluTWF0Y2hDaGFyTGVuZ3RoID0gc2VhcmNoQ29uZmlnLm1pbk1hdGNoQ2hhckxlbmd0aFxuICAgID8gc2VhcmNoQ29uZmlnLm1pbk1hdGNoQ2hhckxlbmd0aFxuICAgIDogMTtcbiAgY29uc3QgZmluZEFsbE1hdGNoZXMgPSBzZWFyY2hDb25maWcuZmluZEFsbE1hdGNoZXNcbiAgICA/IHNlYXJjaENvbmZpZy5maW5kQWxsTWF0Y2hlc1xuICAgIDogZmFsc2U7XG4gIGNvbnN0IGxvY2F0aW9uID0gc2VhcmNoQ29uZmlnLmxvY2F0aW9uID8gc2VhcmNoQ29uZmlnLmxvY2F0aW9uIDogMDtcbiAgY29uc3QgdGhyZXNob2xkID0gc2VhcmNoQ29uZmlnLnRocmVzaG9sZCA/IHNlYXJjaENvbmZpZy50aHJlc2hvbGQgOiAwLjM7XG4gIGNvbnN0IGRpc3RhbmNlID0gc2VhcmNoQ29uZmlnLmRpc3RhbmNlID8gc2VhcmNoQ29uZmlnLmRpc3RhbmNlIDogMTAwO1xuICBjb25zdCBpZ25vcmVMb2NhdGlvbiA9IHNlYXJjaENvbmZpZy5pZ25vcmVMb2NhdGlvblxuICAgID8gc2VhcmNoQ29uZmlnLmlnbm9yZUxvY2F0aW9uXG4gICAgOiBmYWxzZTtcbiAgY29uc3QgdXNlRXh0ZW5kZWRTZWFyY2ggPSBzZWFyY2hDb25maWcudXNlRXh0ZW5kZWRTZWFyY2hcbiAgICA/IHNlYXJjaENvbmZpZy51c2VFeHRlbmRlZFNlYXJjaFxuICAgIDogZmFsc2U7XG4gIGNvbnN0IGlnbm9yZUZpZWxkTm9ybSA9IHNlYXJjaENvbmZpZy5pZ25vcmVGaWVsZE5vcm1cbiAgICA/IHNlYXJjaENvbmZpZy5pZ25vcmVGaWVsZE5vcm1cbiAgICA6IGZhbHNlO1xuICBjb25zdCBzdWZmaXggPSBpc01vYmlsZSA/IFwibW9iaWxlXCIgOiBcImRlc2t0b3BcIjtcbiAgY29uc3QgaGVhZGVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYGhlYWRlci0ke3N1ZmZpeH1gKTtcbiAgY29uc3Qgc2VhcmNoSW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgc2VhcmNoLWlucHV0LSR7c3VmZml4fWApO1xuICBjb25zdCBzZWFyY2hUb2dnbGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgc2VhcmNoLXRvZ2dsZS0ke3N1ZmZpeH1gKTtcbiAgY29uc3Qgc2VhcmNoTG9hZGluZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGBzZWFyY2gtbG9hZGluZy0ke3N1ZmZpeH1gKTtcbiAgY29uc3Qgc2VhcmNoQ2xlYXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgc2VhcmNoLWNsZWFyLSR7c3VmZml4fWApO1xuICBjb25zdCBhdXRvY29tcGxldGVKcyA9IHdpbmRvdy5jb25maWdbXCJhdXRvY29tcGxldGUubWluLmpzXCJdO1xuICBjb25zdCBhbGdvbGlhSnMgPSB3aW5kb3cuY29uZmlnW1wiYWxnb2xpYXNlYXJjaC5taW4uanNcIl07XG4gIGNvbnN0IGZ1c2VKcyA9IHdpbmRvdy5jb25maWdbXCJmdXNlLm1pbi5qc1wiXTtcbiAgaWYgKGlzTW9iaWxlKSB7XG4gICAgd2luZG93Ll9zZWFyY2hNb2JpbGVPbmNlID0gdHJ1ZTtcbiAgICAvLyBUdXJuIG9uIHRoZSBtYXNrIHdoZW4gY2xpY2tpbmcgb24gdGhlIHNlYXJjaCBidXR0b25cbiAgICBzZWFyY2hJbnB1dC5hZGRFdmVudExpc3RlbmVyKFwiZm9jdXNcIiwgKCkgPT4ge1xuICAgICAgbG9hZFNjcmlwdChcImF1dG9jb21wbGV0ZS1zY3JpcHRcIiwgYXV0b2NvbXBsZXRlSnMsICgpID0+IHtcbiAgICAgICAgaW5pdEF1dG9zZWFyY2goKTtcbiAgICAgICAgc2VhcmNoSW5wdXQuZm9jdXMoKTtcbiAgICAgIH0pO1xuICAgICAgaWYgKHdpbmRvdy5jb25maWc/LnNlYXJjaD8udHlwZSA9PT0gXCJhbGdvbGlhXCIpIHtcbiAgICAgICAgbG9hZFNjcmlwdChcImFsZ29saWEtc2NyaXB0XCIsIGFsZ29saWFKcywgbnVsbCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsb2FkU2NyaXB0KFwiZnVzZS1zY3JpcHRcIiwgZnVzZUpzLCBudWxsKTtcbiAgICAgIH1cbiAgICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LmFkZChcImJsdXJcIik7XG4gICAgICBoZWFkZXIuY2xhc3NMaXN0LmFkZChcIm9wZW5cIik7XG4gICAgICBzZWFyY2hJbnB1dC5mb2N1cygpO1xuICAgIH0pO1xuICAgIC8vIFR1cm4gb2ZmIHRoZSBldmVyeXRoaW5nIHdoZW4gY2xpY2tpbmcgb24gdGhlIGNhbmNlbCBidXR0b25cbiAgICBkb2N1bWVudFxuICAgICAgLmdldEVsZW1lbnRCeUlkKFwic2VhcmNoLWNhbmNlbC1tb2JpbGVcIilcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICBoZWFkZXIuY2xhc3NMaXN0LnJlbW92ZShcIm9wZW5cIik7XG4gICAgICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LnJlbW92ZShcImJsdXJcIik7XG4gICAgICAgIGRvY3VtZW50XG4gICAgICAgICAgLmdldEVsZW1lbnRCeUlkKFwibWVudS10b2dnbGUtbW9iaWxlXCIpXG4gICAgICAgICAgLmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIik7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWVudS1tb2JpbGVcIikuY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKTtcbiAgICAgICAgc2VhcmNoTG9hZGluZy5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgIHNlYXJjaENsZWFyLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgd2luZG93Ll9zZWFyY2hNb2JpbGUgJiYgd2luZG93Ll9zZWFyY2hNb2JpbGUuYXV0b2NvbXBsZXRlLnNldFZhbChcIlwiKTtcbiAgICAgIH0pO1xuICAgIC8vIENsZWFyIHRoZSBzZWFyY2ggYm94IHdoZW4gY2xpY2tpbmcgb24gdGhlIGNsZWFyIGJ1dHRvblxuICAgIHNlYXJjaENsZWFyLmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICBcImNsaWNrXCIsXG4gICAgICAoKSA9PiB7XG4gICAgICAgIHNlYXJjaENsZWFyLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgd2luZG93Ll9zZWFyY2hNb2JpbGUgJiYgd2luZG93Ll9zZWFyY2hNb2JpbGUuYXV0b2NvbXBsZXRlLnNldFZhbChcIlwiKTtcbiAgICAgIH0sXG4gICAgICBmYWxzZSxcbiAgICApO1xuICAgIC8vIFJlbW92ZSB0aGUgbWFzayB3aGVuIGNsaWNrIG9uIGl0XG4gICAgd2luZG93Ll9zZWFyY2hNb2JpbGVPbkNsaWNrTWFzayA9ICgpID0+IHtcbiAgICAgIGhlYWRlci5jbGFzc0xpc3QucmVtb3ZlKFwib3BlblwiKTtcbiAgICAgIHNlYXJjaExvYWRpbmcuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgc2VhcmNoQ2xlYXIuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgd2luZG93Ll9zZWFyY2hNb2JpbGUgJiYgd2luZG93Ll9zZWFyY2hNb2JpbGUuYXV0b2NvbXBsZXRlLnNldFZhbChcIlwiKTtcbiAgICB9O1xuICAgIHdpbmRvdy5jbGlja01hc2tFdmVudFNldC5hZGQod2luZG93Ll9zZWFyY2hNb2JpbGVPbkNsaWNrTWFzayk7XG4gIH0gZWxzZSB7XG4gICAgd2luZG93Ll9zZWFyY2hEZXNrdG9wT25jZSA9IHRydWU7XG4gICAgLy8gVHVybiBvbiB0aGUgbWFzayB3aGVuIGNsaWNraW5nIG9uIHRoZSBzZWFyY2ggYnV0dG9uXG4gICAgc2VhcmNoVG9nZ2xlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICBsb2FkU2NyaXB0KFwiYXV0b2NvbXBsZXRlLXNjcmlwdFwiLCBhdXRvY29tcGxldGVKcywgKCkgPT4ge1xuICAgICAgICBpbml0QXV0b3NlYXJjaCgpO1xuICAgICAgICBzZWFyY2hJbnB1dC5mb2N1cygpO1xuICAgICAgfSk7XG4gICAgICBpZiAod2luZG93LmNvbmZpZz8uc2VhcmNoPy50eXBlID09PSBcImFsZ29saWFcIikge1xuICAgICAgICBsb2FkU2NyaXB0KFwiYWxnb2xpYS1zY3JpcHRcIiwgYWxnb2xpYUpzLCBudWxsKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxvYWRTY3JpcHQoXCJmdXNlLXNjcmlwdFwiLCBmdXNlSnMsIG51bGwpO1xuICAgICAgfVxuICAgICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QuYWRkKFwiYmx1clwiKTtcbiAgICAgIGhlYWRlci5jbGFzc0xpc3QuYWRkKFwib3BlblwiKTtcbiAgICAgIHNlYXJjaElucHV0LmZvY3VzKCk7XG4gICAgfSk7XG4gICAgLy8gQ2xlYXIgdGhlIHNlYXJjaCBib3ggd2hlbiBjbGlja2luZyBvbiB0aGUgY2xlYXIgYnV0dG9uXG4gICAgc2VhcmNoQ2xlYXIuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIHNlYXJjaENsZWFyLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgIHdpbmRvdy5fc2VhcmNoRGVza3RvcCAmJiB3aW5kb3cuX3NlYXJjaERlc2t0b3AuYXV0b2NvbXBsZXRlLnNldFZhbChcIlwiKTtcbiAgICB9KTtcbiAgICAvLyBUb2dnbGUgc2VhcmNoIHdoZW4gQ3RybCArIEsgaXMgcHJlc3NlZFxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIChlKSA9PiB7XG4gICAgICBpZiAoZS5jdHJsS2V5ICYmIGUuY29kZSA9PT0gXCJLZXlLXCIpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBzZWFyY2hUb2dnbGUuY2xpY2soKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICAvLyBSZW1vdmUgdGhlIG1hc2sgd2hlbiBjbGljayBvbiBpdFxuICAgIHdpbmRvdy5fc2VhcmNoRGVza3RvcE9uQ2xpY2tNYXNrID0gKCkgPT4ge1xuICAgICAgaGVhZGVyLmNsYXNzTGlzdC5yZW1vdmUoXCJvcGVuXCIpO1xuICAgICAgc2VhcmNoTG9hZGluZy5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICBzZWFyY2hDbGVhci5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICB3aW5kb3cuX3NlYXJjaERlc2t0b3AgJiYgd2luZG93Ll9zZWFyY2hEZXNrdG9wLmF1dG9jb21wbGV0ZS5zZXRWYWwoXCJcIik7XG4gICAgfTtcbiAgICB3aW5kb3cuY2xpY2tNYXNrRXZlbnRTZXQuYWRkKHdpbmRvdy5fc2VhcmNoRGVza3RvcE9uQ2xpY2tNYXNrKTtcbiAgfVxuICAvLyBEaXNwbGF5IHRoZSBjbGVhciBidXR0b24gb25seSB3aGVuIHRoZSBzZWFyY2ggYm94IGlzIG5vdCBlbXB0eVxuICBzZWFyY2hJbnB1dC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4ge1xuICAgIGlmIChzZWFyY2hJbnB1dC52YWx1ZSA9PT0gXCJcIikgc2VhcmNoQ2xlYXIuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgIGVsc2Ugc2VhcmNoQ2xlYXIuc3R5bGUuZGlzcGxheSA9IFwiaW5saW5lXCI7XG4gIH0pO1xuXG4gIGNvbnN0IGluaXRBdXRvc2VhcmNoID0gKCkgPT4ge1xuICAgIGNvbnN0IGF1dG9zZWFyY2ggPSBhdXRvY29tcGxldGUoXG4gICAgICBgI3NlYXJjaC1pbnB1dC0ke3N1ZmZpeH1gLFxuICAgICAge1xuICAgICAgICBoaW50OiBmYWxzZSxcbiAgICAgICAgYXV0b3NlbGVjdDogdHJ1ZSxcbiAgICAgICAgZHJvcGRvd25NZW51Q29udGFpbmVyOiBgI3NlYXJjaC1kcm9wZG93bi0ke3N1ZmZpeH1gLFxuICAgICAgICBjbGVhck9uU2VsZWN0ZWQ6IGZhbHNlLFxuICAgICAgICBjc3NDbGFzc2VzOiB7IG5vUHJlZml4OiB0cnVlIH0sXG4gICAgICAgIGRlYnVnOiB0cnVlLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgbmFtZTogXCJzZWFyY2hcIixcbiAgICAgICAgc291cmNlOiAocXVlcnksIGNhbGxiYWNrKSA9PiB7XG4gICAgICAgICAgc2VhcmNoTG9hZGluZy5zdHlsZS5kaXNwbGF5ID0gXCJpbmxpbmVcIjtcbiAgICAgICAgICBzZWFyY2hDbGVhci5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgICAgY29uc3QgZmluaXNoID0gKHJlc3VsdHMpID0+IHtcbiAgICAgICAgICAgIHNlYXJjaExvYWRpbmcuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgICAgICAgc2VhcmNoQ2xlYXIuc3R5bGUuZGlzcGxheSA9IFwiaW5saW5lXCI7XG4gICAgICAgICAgICBjYWxsYmFjayhyZXN1bHRzKTtcbiAgICAgICAgICB9O1xuICAgICAgICAgIGlmIChzZWFyY2hDb25maWcudHlwZSA9PT0gXCJhbGdvbGlhXCIpIHtcbiAgICAgICAgICAgIHdpbmRvdy5fYWxnb2xpYUluZGV4ID1cbiAgICAgICAgICAgICAgd2luZG93Ll9hbGdvbGlhSW5kZXggfHxcbiAgICAgICAgICAgICAgYWxnb2xpYXNlYXJjaChcbiAgICAgICAgICAgICAgICBzZWFyY2hDb25maWcuYWxnb2xpYUFwcElELFxuICAgICAgICAgICAgICAgIHNlYXJjaENvbmZpZy5hbGdvbGlhU2VhcmNoS2V5LFxuICAgICAgICAgICAgICApLmluaXRJbmRleChzZWFyY2hDb25maWcuYWxnb2xpYUluZGV4KTtcbiAgICAgICAgICAgIHdpbmRvdy5fYWxnb2xpYUluZGV4XG4gICAgICAgICAgICAgIC5zZWFyY2gocXVlcnksIHtcbiAgICAgICAgICAgICAgICBvZmZzZXQ6IDAsXG4gICAgICAgICAgICAgICAgbGVuZ3RoOiBtYXhSZXN1bHRMZW5ndGggKiA4LFxuICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXNUb0hpZ2hsaWdodDogW1widGl0bGVcIl0sXG4gICAgICAgICAgICAgICAgYXR0cmlidXRlc1RvUmV0cmlldmU6IFtcIipcIl0sXG4gICAgICAgICAgICAgICAgYXR0cmlidXRlc1RvU25pcHBldDogW2Bjb250ZW50OiR7c25pcHBldExlbmd0aH1gXSxcbiAgICAgICAgICAgICAgICBoaWdobGlnaHRQcmVUYWc6IGA8JHtoaWdobGlnaHRUYWd9PmAsXG4gICAgICAgICAgICAgICAgaGlnaGxpZ2h0UG9zdFRhZzogYDwvJHtoaWdobGlnaHRUYWd9PmAsXG4gICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgIC50aGVuKCh7IGhpdHMgfSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdHMgPSB7fTtcbiAgICAgICAgICAgICAgICBoaXRzLmZvckVhY2goXG4gICAgICAgICAgICAgICAgICAoe1xuICAgICAgICAgICAgICAgICAgICB1cmksXG4gICAgICAgICAgICAgICAgICAgIGRhdGUsXG4gICAgICAgICAgICAgICAgICAgIF9oaWdobGlnaHRSZXN1bHQ6IHsgdGl0bGUgfSxcbiAgICAgICAgICAgICAgICAgICAgX3NuaXBwZXRSZXN1bHQ6IHsgY29udGVudCB9LFxuICAgICAgICAgICAgICAgICAgfSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICAgcmVzdWx0c1t1cmldICYmXG4gICAgICAgICAgICAgICAgICAgICAgcmVzdWx0c1t1cmldLmNvbnRleHQubGVuZ3RoID4gY29udGVudC52YWx1ZVxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICByZXN1bHRzW3VyaV0gPSB7XG4gICAgICAgICAgICAgICAgICAgICAgdXJpLFxuICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiB0aXRsZS52YWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgICBkYXRlLFxuICAgICAgICAgICAgICAgICAgICAgIGNvbnRleHQ6IGNvbnRlbnQudmFsdWUsXG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgZmluaXNoKE9iamVjdC52YWx1ZXMocmVzdWx0cykuc2xpY2UoMCwgbWF4UmVzdWx0TGVuZ3RoKSk7XG4gICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xuICAgICAgICAgICAgICAgIGZpbmlzaChbXSk7XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0gZWxzZSBpZiAoc2VhcmNoQ29uZmlnLnR5cGUgPT09IFwiZnVzZVwiKSB7XG4gICAgICAgICAgICBjb25zdCBzZWFyY2ggPSAoKSA9PiB7XG4gICAgICAgICAgICAgIGNvbnN0IHJlc3VsdHMgPSB7fTtcbiAgICAgICAgICAgICAgd2luZG93Ll9pbmRleFxuICAgICAgICAgICAgICAgIC5zZWFyY2gocXVlcnkpXG4gICAgICAgICAgICAgICAgLmZvckVhY2goKHsgaXRlbSwgcmVmSW5kZXgsIG1hdGNoZXMgfSkgPT4ge1xuICAgICAgICAgICAgICAgICAgbGV0IHRpdGxlID0gaXRlbS50aXRsZTtcbiAgICAgICAgICAgICAgICAgIGxldCBjb250ZW50ID0gaXRlbS5jb250ZW50O1xuICAgICAgICAgICAgICAgICAgbWF0Y2hlcy5mb3JFYWNoKCh7IGluZGljZXMsIHZhbHVlLCBrZXkgfSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoa2V5ID09PSBcImNvbnRlbnRcIikge1xuICAgICAgICAgICAgICAgICAgICAgIGxldCBvZmZzZXQgPSAwO1xuICAgICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaW5kaWNlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgc3Vic3RyID0gY29udGVudC5zdWJzdHJpbmcoXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGluZGljZXNbaV1bMF0gKyBvZmZzZXQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGluZGljZXNbaV1bMV0gKyAxICsgb2Zmc2V0LFxuICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHRhZyA9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGA8JHtoaWdobGlnaHRUYWd9PmAgKyBzdWJzdHIgKyBgPC8ke2hpZ2hsaWdodFRhZ30+YDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQgPVxuICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50LnN1YnN0cmluZygwLCBpbmRpY2VzW2ldWzBdICsgb2Zmc2V0KSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHRhZyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQuc3Vic3RyaW5nKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGljZXNbaV1bMV0gKyAxICsgb2Zmc2V0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQubGVuZ3RoLFxuICAgICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICAgICAgb2Zmc2V0ICs9IGhpZ2hsaWdodFRhZy5sZW5ndGggKiAyICsgNTtcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoa2V5ID09PSBcInRpdGxlXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICBsZXQgb2Zmc2V0ID0gMDtcbiAgICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGluZGljZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHN1YnN0ciA9IHRpdGxlLnN1YnN0cmluZyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaW5kaWNlc1tpXVswXSArIG9mZnNldCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaW5kaWNlc1tpXVsxXSArIDEgKyBvZmZzZXQsXG4gICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdGFnID1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgYDwke2hpZ2hsaWdodFRhZ30+YCArIHN1YnN0ciArIGA8LyR7aGlnaGxpZ2h0VGFnfT5gO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGUgPVxuICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZS5zdWJzdHJpbmcoMCwgaW5kaWNlc1tpXVswXSArIG9mZnNldCkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICB0YWcgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZS5zdWJzdHJpbmcoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5kaWNlc1tpXVsxXSArIDEgKyBvZmZzZXQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudC5sZW5ndGgsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgICAgICBvZmZzZXQgKz0gaGlnaGxpZ2h0VGFnLmxlbmd0aCAqIDIgKyA1O1xuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICByZXN1bHRzW2l0ZW0udXJpXSA9IHtcbiAgICAgICAgICAgICAgICAgICAgdXJpOiBpdGVtLnVyaSxcbiAgICAgICAgICAgICAgICAgICAgdGl0bGUsXG4gICAgICAgICAgICAgICAgICAgIGRhdGU6IGl0ZW0uZGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgY29udGV4dDogY29udGVudCxcbiAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIHJldHVybiBPYmplY3QudmFsdWVzKHJlc3VsdHMpLnNsaWNlKDAsIG1heFJlc3VsdExlbmd0aCk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgaWYgKCF3aW5kb3cuX2luZGV4KSB7XG4gICAgICAgICAgICAgIGZldGNoKHNlYXJjaENvbmZpZy5mdXNlSW5kZXhVUkwpXG4gICAgICAgICAgICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiByZXNwb25zZS5qc29uKCkpXG4gICAgICAgICAgICAgICAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgICAgICAgICAgICAgIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgICAgICAgICAgICAgICAgIGlzQ2FzZVNlbnNpdGl2ZSxcbiAgICAgICAgICAgICAgICAgICAgZmluZEFsbE1hdGNoZXMsXG4gICAgICAgICAgICAgICAgICAgIG1pbk1hdGNoQ2hhckxlbmd0aCxcbiAgICAgICAgICAgICAgICAgICAgbG9jYXRpb24sXG4gICAgICAgICAgICAgICAgICAgIHRocmVzaG9sZCxcbiAgICAgICAgICAgICAgICAgICAgZGlzdGFuY2UsXG4gICAgICAgICAgICAgICAgICAgIGlnbm9yZUxvY2F0aW9uLFxuICAgICAgICAgICAgICAgICAgICB1c2VFeHRlbmRlZFNlYXJjaCxcbiAgICAgICAgICAgICAgICAgICAgaWdub3JlRmllbGROb3JtLFxuICAgICAgICAgICAgICAgICAgICBpbmNsdWRlU2NvcmU6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBzaG91bGRTb3J0OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBpbmNsdWRlTWF0Y2hlczogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAga2V5czogW1wiY29udGVudFwiLCBcInRpdGxlXCJdLFxuICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgIHdpbmRvdy5faW5kZXggPSBuZXcgRnVzZShkYXRhLCBvcHRpb25zKTtcbiAgICAgICAgICAgICAgICAgIGZpbmlzaChzZWFyY2goKSk7XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xuICAgICAgICAgICAgICAgICAgZmluaXNoKFtdKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0gZWxzZSBmaW5pc2goc2VhcmNoKCkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgdGVtcGxhdGVzOiB7XG4gICAgICAgICAgc3VnZ2VzdGlvbjogKHsgdGl0bGUsIHVyaSwgZGF0ZSwgY29udGV4dCB9KSA9PlxuICAgICAgICAgICAgYDxkaXY+PGEgaHJlZj0ke3VyaX0+PHNwYW4gY2xhc3M9XCJzdWdnZXN0aW9uLXRpdGxlXCI+JHt0aXRsZX08L3NwYW4+PC9hPjxzcGFuIGNsYXNzPVwic3VnZ2VzdGlvbi1kYXRlXCI+JHtkYXRlfTwvc3Bhbj48L2Rpdj48ZGl2IGNsYXNzPVwic3VnZ2VzdGlvbi1jb250ZXh0XCI+JHtjb250ZXh0fTwvZGl2PmAsXG4gICAgICAgICAgZW1wdHk6ICh7IHF1ZXJ5IH0pID0+XG4gICAgICAgICAgICBgPGRpdiBjbGFzcz1cInNlYXJjaC1lbXB0eVwiPiR7c2VhcmNoQ29uZmlnLm5vUmVzdWx0c0ZvdW5kfTogPHNwYW4gY2xhc3M9XCJzZWFyY2gtcXVlcnlcIj5cIiR7ZXNjYXBlKHF1ZXJ5KX1cIjwvc3Bhbj48L2Rpdj5gLFxuICAgICAgICAgIGZvb3RlcjogKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgeyBzZWFyY2hUeXBlLCBpY29uLCBocmVmIH0gPVxuICAgICAgICAgICAgICBzZWFyY2hDb25maWcudHlwZSA9PT0gXCJhbGdvbGlhXCJcbiAgICAgICAgICAgICAgICA/IHtcbiAgICAgICAgICAgICAgICAgICAgc2VhcmNoVHlwZTogXCJhbGdvbGlhXCIsXG4gICAgICAgICAgICAgICAgICAgIGljb246ICc8c3ZnIGNsYXNzPVwiaWNvblwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB2aWV3Qm94PVwiMCAwIDQ0OCA1MTJcIj48IS0tIEZvbnQgQXdlc29tZSBGcmVlIDUuMTUuNCBieSBAZm9udGF3ZXNvbWUgLSBodHRwczovL2ZvbnRhd2Vzb21lLmNvbSBMaWNlbnNlIC0gaHR0cHM6Ly9mb250YXdlc29tZS5jb20vbGljZW5zZS9mcmVlIChJY29uczogQ0MgQlkgNC4wLCBGb250czogU0lMIE9GTCAxLjEsIENvZGU6IE1JVCBMaWNlbnNlKSAtLT48cGF0aCBkPVwiTTIyOS4zIDE4Mi42Yy00OS4zIDAtODkuMiAzOS45LTg5LjIgODkuMiAwIDQ5LjMgMzkuOSA4OS4yIDg5LjIgODkuMnM4OS4yLTM5LjkgODkuMi04OS4yYzAtNDkuMy00MC04OS4yLTg5LjItODkuMnptNjIuNyA1Ni42bC01OC45IDMwLjZjLTEuOC45LTMuOC0uNC0zLjgtMi4zVjIwMWMwLTEuNSAxLjMtMi43IDIuNy0yLjYgMjYuMiAxIDQ4LjkgMTUuNyA2MS4xIDM3LjEuNyAxLjMuMiAzLTEuMSAzLjd6TTM4OS4xIDMySDU4LjlDMjYuNCAzMiAwIDU4LjQgMCA5MC45VjQyMWMwIDMyLjYgMjYuNCA1OSA1OC45IDU5SDM4OWMzMi42IDAgNTguOS0yNi40IDU4LjktNTguOVY5MC45QzQ0OCA1OC40IDQyMS42IDMyIDM4OS4xIDMyem0tMjAyLjYgODQuN2MwLTEwLjggOC43LTE5LjUgMTkuNS0xOS41aDQ1LjNjMTAuOCAwIDE5LjUgOC43IDE5LjUgMTkuNXYxNS40YzAgMS44LTEuNyAzLTMuMyAyLjUtMTIuMy0zLjQtMjUuMS01LjEtMzguMS01LjEtMTMuNSAwLTI2LjcgMS44LTM5LjQgNS41LTEuNy41LTMuNC0uOC0zLjQtMi41di0xNS44em0tODQuNCAzN2w5LjItOS4yYzcuNi03LjYgMTkuOS03LjYgMjcuNSAwbDcuNyA3LjdjMS4xIDEuMSAxIDMtLjMgNC02LjIgNC41LTEyLjEgOS40LTE3LjYgMTQuOS01LjQgNS40LTEwLjQgMTEuMy0xNC44IDE3LjQtMSAxLjMtMi45IDEuNS00IC4zbC03LjctNy43Yy03LjYtNy41LTcuNi0xOS44IDAtMjcuNHptMTI3LjIgMjQ0LjhjLTcwIDAtMTI2LjYtNTYuNy0xMjYuNi0xMjYuNnM1Ni43LTEyNi42IDEyNi42LTEyNi42YzcwIDAgMTI2LjYgNTYuNiAxMjYuNiAxMjYuNiAwIDY5LjgtNTYuNyAxMjYuNi0xMjYuNiAxMjYuNnpcIi8+PC9zdmc+JyxcbiAgICAgICAgICAgICAgICAgICAgaHJlZjogXCJodHRwczovL3d3dy5hbGdvbGlhLmNvbS9cIixcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICA6IHtcbiAgICAgICAgICAgICAgICAgICAgc2VhcmNoVHlwZTogXCJGdXNlLmpzXCIsXG4gICAgICAgICAgICAgICAgICAgIGljb246IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgIGhyZWY6IFwiaHR0cHM6Ly9mdXNlanMuaW8vXCIsXG4gICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmV0dXJuIGA8ZGl2IGNsYXNzPVwic2VhcmNoLWZvb3RlclwiPlNlYXJjaCBieSA8YSBocmVmPVwiJHtocmVmfVwiIHJlbD1cIm5vb3BlbmVyIG5vcmVmZmVyXCIgdGFyZ2V0PVwiX2JsYW5rXCI+JHtpY29ufSAke3NlYXJjaFR5cGV9PC9hPjwvZGl2PmA7XG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgKTtcbiAgICBhdXRvc2VhcmNoLm9uKFxuICAgICAgXCJhdXRvY29tcGxldGU6c2VsZWN0ZWRcIixcbiAgICAgIChldmVudCwgX3N1Z2dlc3Rpb24sIF9kYXRhc2V0LCBfY29udGV4dCkgPT4ge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgfSxcbiAgICApO1xuICAgIGlmIChpc01vYmlsZSkgd2luZG93Ll9zZWFyY2hNb2JpbGUgPSBhdXRvc2VhcmNoO1xuICAgIGVsc2Ugd2luZG93Ll9zZWFyY2hEZXNrdG9wID0gYXV0b3NlYXJjaDtcbiAgfTtcbiAgZnVuY3Rpb24gbG9hZFNjcmlwdChpZCwgdXJsLCBvbmxvYWQpIHtcbiAgICBpZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgIyR7aWR9YCkgPT09IG51bGwpIHtcbiAgICAgIGNvbnN0IGhlYWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiaGVhZFwiKTtcbiAgICAgIGNvbnN0IHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIik7XG4gICAgICBzY3JpcHQuc2V0QXR0cmlidXRlKFwic3JjXCIsIHVybCk7XG4gICAgICBzY3JpcHQuc2V0QXR0cmlidXRlKFwiaWRcIiwgaWQpO1xuICAgICAgc2NyaXB0Lm9ubG9hZCA9IG9ubG9hZDtcbiAgICAgIGhlYWQuYXBwZW5kQ2hpbGQoc2NyaXB0KTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gaW5pdERldGFpbHMoKSB7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuZGV0YWlsc1wiKS5mb3JFYWNoKCgkZGV0YWlscykgPT4ge1xuICAgIGNvbnN0ICRzdW1tYXJ5ID0gJGRldGFpbHMuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcbiAgICAgIFwiZGV0YWlscy1zdW1tYXJ5XCIsXG4gICAgKVswXSBhcyBIVE1MRGl2RWxlbWVudDtcbiAgICBjb25zdCBjb250ZW50ID0gJHN1bW1hcnkubmV4dEVsZW1lbnRTaWJsaW5nIGFzIEhUTUxEaXZFbGVtZW50O1xuICAgIGlmICgkZGV0YWlscy5jbGFzc0xpc3QuY29udGFpbnMoXCJvcGVuXCIpKSB7XG4gICAgICBjb250ZW50LnN0eWxlLm1heEhlaWdodCA9IGNvbnRlbnQuc2Nyb2xsSGVpZ2h0ICsgXCJweFwiO1xuICAgIH1cbiAgICAkc3VtbWFyeS5hZGRFdmVudExpc3RlbmVyKFxuICAgICAgXCJjbGlja1wiLFxuICAgICAgKCkgPT4ge1xuICAgICAgICBpZiAoJGRldGFpbHMuY2xhc3NMaXN0LmNvbnRhaW5zKFwib3BlblwiKSkge1xuICAgICAgICAgIGNvbnRlbnQuc3R5bGUubWF4SGVpZ2h0ID0gXCIwcHhcIjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjb250ZW50LnN0eWxlLm1heEhlaWdodCA9IGNvbnRlbnQuc2Nyb2xsSGVpZ2h0ICsgXCJweFwiO1xuICAgICAgICB9XG4gICAgICAgICRkZXRhaWxzLmNsYXNzTGlzdC50b2dnbGUoXCJvcGVuXCIpO1xuICAgICAgfSxcbiAgICAgIGZhbHNlLFxuICAgICk7XG4gICAgYWRkRXZlbnRMaXN0ZW5lcihcImJlZm9yZXByaW50XCIsICgpID0+IHtcbiAgICAgIGlmICgkZGV0YWlscy5jbGFzc0xpc3QuY29udGFpbnMoXCJvcGVuXCIpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgICRzdW1tYXJ5LmNsaWNrKCk7XG4gICAgfSk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBpbml0TGlnaHRHYWxsZXJ5KCkge1xuICBpZiAod2luZG93LmNvbmZpZy5saWdodEdhbGxlcnkpIHtcbiAgICBsaWdodEdhbGxlcnkoXG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNvbnRlbnRcIiksXG4gICAgICB3aW5kb3cuY29uZmlnLmxpZ2h0R2FsbGVyeSxcbiAgICApO1xuICB9XG59XG5cbmZ1bmN0aW9uIGluaXRUYWJsZSgpIHtcbiAgZm9yRWFjaChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmNvbnRlbnQgdGFibGVcIiksICgkdGFibGUpID0+IHtcbiAgICBjb25zdCAkd3JhcHBlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgJHdyYXBwZXIuY2xhc3NOYW1lID0gXCJ0YWJsZS13cmFwcGVyXCI7XG4gICAgJHRhYmxlLnBhcmVudEVsZW1lbnQucmVwbGFjZUNoaWxkKCR3cmFwcGVyLCAkdGFibGUpO1xuICAgICR3cmFwcGVyLmFwcGVuZENoaWxkKCR0YWJsZSk7XG4gICAgaWYgKHdpbmRvdy5jb25maWc/LnRhYmxlPy5zb3J0KSB7XG4gICAgICBuZXcgVGFibGVzb3J0KCR0YWJsZSk7XG4gICAgfVxuICB9KTtcbn1cblxuZnVuY3Rpb24gaW5pdFRvYygpIHtcbiAgY29uc3QgdG9jQ29yZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiVGFibGVPZkNvbnRlbnRzXCIpO1xuICAvLyBSZXR1cm4gZGlyZWN0bHkgaWYgbm8gdG9jXG4gIGlmICh0b2NDb3JlID09PSBudWxsKSByZXR1cm47XG4gIGNvbnN0IGlzVG9jU3RhdGljID1cbiAgICB3aW5kb3cubWF0Y2hNZWRpYSAmJlxuICAgIHdpbmRvdy5tYXRjaE1lZGlhKFwib25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMDBweClcIikubWF0Y2hlcztcblxuICBpZiAoXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0b2Mtc3RhdGljXCIpLmdldEF0dHJpYnV0ZShcImtlcHRcIikgfHxcbiAgICBpc1RvY1N0YXRpY1xuICApIHtcbiAgICBpZiAod2luZG93Ll90b2NPblNjcm9sbCkgd2luZG93LnNjcm9sbEV2ZW50U2V0LmRlbGV0ZSh3aW5kb3cuX3RvY09uU2Nyb2xsKTtcbiAgfSBlbHNlIHtcbiAgICBjb25zdCB0b2MgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRvYy1hdXRvXCIpO1xuICAgIGNvbnN0IHRvY0xpbmtFbGVtZW50cyA9IHRvY0NvcmUucXVlcnlTZWxlY3RvckFsbChcImE6Zmlyc3QtY2hpbGRcIik7XG4gICAgY29uc3QgdG9jTGlFbGVtZW50cyA9IHRvY0NvcmUuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJsaVwiKTtcbiAgICBjb25zdCBoZWFkZXJMaW5rRWxlbWVudHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwiaGVhZGVyTGlua1wiKTtcbiAgICBjb25zdCBoZWFkZXJJc0ZpeGVkID1cbiAgICAgIGRvY3VtZW50LmJvZHkuZ2V0QXR0cmlidXRlKFwiaGVhZGVyLWRlc2t0b3BcIikgIT09IFwibm9ybWFsXCI7XG4gICAgY29uc3QgaGVhZGVySGVpZ2h0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJoZWFkZXItZGVza3RvcFwiKS5vZmZzZXRIZWlnaHQ7XG4gICAgY29uc3QgVE9QX1NQQUNJTkcgPSAyMCArIChoZWFkZXJJc0ZpeGVkID8gaGVhZGVySGVpZ2h0IDogMCk7XG4gICAgY29uc3QgbWluVG9jVG9wID0gdG9jLm9mZnNldFRvcDtcbiAgICBjb25zdCBtaW5TY3JvbGxUb3AgPVxuICAgICAgbWluVG9jVG9wIC0gVE9QX1NQQUNJTkcgKyAoaGVhZGVySXNGaXhlZCA/IDAgOiBoZWFkZXJIZWlnaHQpO1xuICAgIHdpbmRvdy5fdG9jT25TY3JvbGwgPVxuICAgICAgd2luZG93Ll90b2NPblNjcm9sbCB8fFxuICAgICAgKCgpID0+IHtcbiAgICAgICAgY29uc3QgZm9vdGVyVG9wID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwb3N0LWZvb3RlclwiKS5vZmZzZXRUb3A7XG4gICAgICAgIGNvbnN0IG1heFRvY1RvcCA9IGZvb3RlclRvcCAtIHRvYy5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5oZWlnaHQ7XG4gICAgICAgIGNvbnN0IG1heFNjcm9sbFRvcCA9XG4gICAgICAgICAgbWF4VG9jVG9wIC0gVE9QX1NQQUNJTkcgKyAoaGVhZGVySXNGaXhlZCA/IDAgOiBoZWFkZXJIZWlnaHQpO1xuICAgICAgICBpZiAod2luZG93Lm5ld1Njcm9sbFRvcCA8IG1pblNjcm9sbFRvcCkge1xuICAgICAgICAgIC8vIElmIHNjcm9sbCB0byB0aGUgdG9wIG9mIHRoZSBwYWdlXG4gICAgICAgICAgLy8gU2V0IHRvYyB0byBhYnNvbHV0ZVxuICAgICAgICAgIHRvYy5zdHlsZS5wb3NpdGlvbiA9IFwiYWJzb2x1dGVcIjtcbiAgICAgICAgICB0b2Muc3R5bGUudG9wID0gYCR7bWluVG9jVG9wfXB4YDtcbiAgICAgICAgfSBlbHNlIGlmICh3aW5kb3cubmV3U2Nyb2xsVG9wID4gbWF4U2Nyb2xsVG9wKSB7XG4gICAgICAgICAgLy8gSWYgc2Nyb2xsIHRvIHRoZSBib3R0b20gb2YgdGhlIHBhZ2VcbiAgICAgICAgICAvLyBTZXQgdG9jIHRvIGFic29sdXRlXG4gICAgICAgICAgdG9jLnN0eWxlLnBvc2l0aW9uID0gXCJhYnNvbHV0ZVwiO1xuICAgICAgICAgIHRvYy5zdHlsZS50b3AgPSBgJHttYXhUb2NUb3B9cHhgO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIElmIGluIHRoZSBtaWRkbGVcbiAgICAgICAgICAvLyBTZXQgdG9jIHRvIGZpeGVkIHdpdGggVE9QX1NQQUNJTkdcbiAgICAgICAgICB0b2Muc3R5bGUucG9zaXRpb24gPSBcImZpeGVkXCI7XG4gICAgICAgICAgdG9jLnN0eWxlLnRvcCA9IGAke1RPUF9TUEFDSU5HfXB4YDtcbiAgICAgICAgfVxuICAgICAgICAvLyBVcGRhdGUgdGhlIGFjdGl2ZSB0b2MgbGlua1xuICAgICAgICAvLyBSZXR1cm4gZGlyZWN0bHkgaWYgbm8gdG9jIGxpbmtcbiAgICAgICAgaWYgKHRvY0xpbmtFbGVtZW50cy5sZW5ndGggPT09IDApIHJldHVybjtcblxuICAgICAgICBsZXQgYWN0aXZlVG9jSW5kZXggPSAtMTtcbiAgICAgICAgY29uc3QgSU5ERVhfU1BBQ0lORyA9IFRPUF9TUEFDSU5HICsgd2luZG93Lm5ld1Njcm9sbFRvcDtcbiAgICAgICAgLy8gSWYgdGhlIElOREVYX1NQQUNJTkcgaXMgYmVsb3cgdGhlIGxhc3QgaGVhZGVyIGxpbmtcbiAgICAgICAgLy8gYWN0aXZhdGUgdGhlIGxhc3QgZWxlbWVudFxuICAgICAgICBpZiAoXG4gICAgICAgICAgaGVhZGVyTGlua0VsZW1lbnRzW2hlYWRlckxpbmtFbGVtZW50cy5sZW5ndGggLSAxXS5vZmZzZXRUb3AgPFxuICAgICAgICAgIElOREVYX1NQQUNJTkdcbiAgICAgICAgKSB7XG4gICAgICAgICAgYWN0aXZlVG9jSW5kZXggPSBoZWFkZXJMaW5rRWxlbWVudHMubGVuZ3RoIC0gMTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBPdGhlcndpc2UgYWN0aXZhdGUgdGhlIGVsZW1lbnQgdGhhdCBpcyBpbiBiZXR3ZWVuXG4gICAgICAgICAgLy8gVXNlIG9mZnNldFRvcCBpbnN0ZWFkIG9mIGdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcCBmb3IgYmV0dGVyIHBlcmZvcm1hbmNlXG4gICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBoZWFkZXJMaW5rRWxlbWVudHMubGVuZ3RoIC0gMTsgaSsrKSB7XG4gICAgICAgICAgICBjb25zdCB0aGlzVG9wID0gaGVhZGVyTGlua0VsZW1lbnRzW2ldLm9mZnNldFRvcDtcbiAgICAgICAgICAgIGNvbnN0IG5leHRUb3AgPSBoZWFkZXJMaW5rRWxlbWVudHNbaSArIDFdLm9mZnNldFRvcDtcbiAgICAgICAgICAgIGlmICh0aGlzVG9wIDw9IElOREVYX1NQQUNJTkcgJiYgbmV4dFRvcCA+IElOREVYX1NQQUNJTkcpIHtcbiAgICAgICAgICAgICAgYWN0aXZlVG9jSW5kZXggPSBpO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy8gUmVtb3ZlIGFsbCBsZWdhY3kgc3RhdGVzXG4gICAgICAgIEFycmF5LmZyb20odG9jTGlua0VsZW1lbnRzKS5mb3JFYWNoKCh0b2NMaW5rKSA9PlxuICAgICAgICAgIHRvY0xpbmsuY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKSxcbiAgICAgICAgKTtcbiAgICAgICAgQXJyYXkuZnJvbSh0b2NMaUVsZW1lbnRzKS5mb3JFYWNoKCh0b2NMaSkgPT5cbiAgICAgICAgICB0b2NMaS5jbGFzc0xpc3QucmVtb3ZlKFwiaGFzLWFjdGl2ZVwiKSxcbiAgICAgICAgKTtcblxuICAgICAgICAvLyBTZXQgdGhlIHRvY0xpbmtFbGVtZW50IHRvIGFjdGl2ZVxuICAgICAgICAvLyBhbmQgYWxsIGl0cyBwYXJlbnQgdG8gaGFzLWFjdGl2ZVxuICAgICAgICBpZiAoYWN0aXZlVG9jSW5kZXggPj0gMCAmJiBhY3RpdmVUb2NJbmRleCA8IHRvY0xpbmtFbGVtZW50cy5sZW5ndGgpIHtcbiAgICAgICAgICB0b2NMaW5rRWxlbWVudHNbYWN0aXZlVG9jSW5kZXhdLmNsYXNzTGlzdC5hZGQoXCJhY3RpdmVcIik7XG4gICAgICAgICAgLy8gdG9jTGlua0VsZW1lbnRzW2FjdGl2ZVRvY0luZGV4XS5zY3JvbGxJbnRvVmlldyh7XG4gICAgICAgICAgLy8gICBiZWhhdmlvcjogJ3Ntb290aCcsXG4gICAgICAgICAgLy8gICBibG9jazogJ2NlbnRlcidcbiAgICAgICAgICAvLyB9KVxuICAgICAgICAgIGxldCBwYXJlbnQgPSB0b2NMaW5rRWxlbWVudHNbYWN0aXZlVG9jSW5kZXhdLnBhcmVudEVsZW1lbnQ7XG4gICAgICAgICAgd2hpbGUgKHBhcmVudCAhPT0gdG9jQ29yZSkge1xuICAgICAgICAgICAgcGFyZW50LmNsYXNzTGlzdC5hZGQoXCJoYXMtYWN0aXZlXCIpO1xuICAgICAgICAgICAgcGFyZW50ID0gcGFyZW50LnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIHdpbmRvdy5fdG9jT25TY3JvbGwoKTtcbiAgICB3aW5kb3cuc2Nyb2xsRXZlbnRTZXQuYWRkKHdpbmRvdy5fdG9jT25TY3JvbGwpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGluaXRNYXBib3goKSB7XG4gIGlmICh3aW5kb3cuY29uZmlnLm1hcGJveCkge1xuICAgIG1hcGJveGdsLmFjY2Vzc1Rva2VuID0gd2luZG93LmNvbmZpZy5tYXBib3guYWNjZXNzVG9rZW47XG4gICAgbWFwYm94Z2wuc2V0UlRMVGV4dFBsdWdpbih3aW5kb3cuY29uZmlnLm1hcGJveC5SVExUZXh0UGx1Z2luKTtcbiAgICB3aW5kb3cuX21hcGJveEFyciA9IHdpbmRvdy5fbWFwYm94QXJyIHx8IFtdO1xuICAgIGZvckVhY2goZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcIm1hcGJveFwiKSwgKCRtYXBib3gpID0+IHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgbG5nLFxuICAgICAgICBsYXQsXG4gICAgICAgIHpvb20sXG4gICAgICAgIGxpZ2h0U3R5bGUsXG4gICAgICAgIGRhcmtTdHlsZSxcbiAgICAgICAgbWFya2VkLFxuICAgICAgICBuYXZpZ2F0aW9uLFxuICAgICAgICBnZW9sb2NhdGUsXG4gICAgICAgIHNjYWxlLFxuICAgICAgICBmdWxsc2NyZWVuLFxuICAgICAgfSA9IHdpbmRvdy5jb25maWcuZGF0YVskbWFwYm94LmlkXTtcbiAgICAgIGNvbnN0IG1hcGJveCA9IG5ldyBtYXBib3hnbC5NYXAoe1xuICAgICAgICBjb250YWluZXI6ICRtYXBib3gsXG4gICAgICAgIGNlbnRlcjogW2xuZywgbGF0XSxcbiAgICAgICAgem9vbSxcbiAgICAgICAgbWluWm9vbTogMC4yLFxuICAgICAgICBzdHlsZTogd2luZG93LmlzRGFyayA/IGRhcmtTdHlsZSA6IGxpZ2h0U3R5bGUsXG4gICAgICAgIGF0dHJpYnV0aW9uQ29udHJvbDogZmFsc2UsXG4gICAgICB9KTtcbiAgICAgIGlmIChtYXJrZWQpIHtcbiAgICAgICAgbmV3IG1hcGJveGdsLk1hcmtlcigpLnNldExuZ0xhdChbbG5nLCBsYXRdKS5hZGRUbyhtYXBib3gpO1xuICAgICAgfVxuICAgICAgaWYgKG5hdmlnYXRpb24pIHtcbiAgICAgICAgbWFwYm94LmFkZENvbnRyb2wobmV3IG1hcGJveGdsLk5hdmlnYXRpb25Db250cm9sKCksIFwiYm90dG9tLXJpZ2h0XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGdlb2xvY2F0ZSkge1xuICAgICAgICBtYXBib3guYWRkQ29udHJvbChcbiAgICAgICAgICBuZXcgbWFwYm94Z2wuR2VvbG9jYXRlQ29udHJvbCh7XG4gICAgICAgICAgICBwb3NpdGlvbk9wdGlvbnM6IHtcbiAgICAgICAgICAgICAgZW5hYmxlSGlnaEFjY3VyYWN5OiB0cnVlLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNob3dVc2VyTG9jYXRpb246IHRydWUsXG4gICAgICAgICAgICB0cmFja1VzZXJMb2NhdGlvbjogdHJ1ZSxcbiAgICAgICAgICB9KSxcbiAgICAgICAgICBcImJvdHRvbS1yaWdodFwiLFxuICAgICAgICApO1xuICAgICAgfVxuICAgICAgaWYgKHNjYWxlKSB7XG4gICAgICAgIG1hcGJveC5hZGRDb250cm9sKG5ldyBtYXBib3hnbC5TY2FsZUNvbnRyb2woKSk7XG4gICAgICB9XG4gICAgICBpZiAoZnVsbHNjcmVlbikge1xuICAgICAgICBtYXBib3guYWRkQ29udHJvbChuZXcgbWFwYm94Z2wuRnVsbHNjcmVlbkNvbnRyb2woKSk7XG4gICAgICB9XG4gICAgICBtYXBib3guYWRkQ29udHJvbChuZXcgTWFwYm94TGFuZ3VhZ2UoKSk7XG4gICAgICB3aW5kb3cuX21hcGJveEFyci5wdXNoKG1hcGJveCk7XG4gICAgfSk7XG4gICAgd2luZG93Ll9tYXBib3hPblN3aXRjaFRoZW1lID0gKCkgPT4ge1xuICAgICAgZm9yRWFjaCh3aW5kb3cuX21hcGJveEFyciwgKG1hcGJveCkgPT4ge1xuICAgICAgICBjb25zdCAkbWFwYm94ID0gbWFwYm94LmdldENvbnRhaW5lcigpO1xuICAgICAgICBjb25zdCB7IGxpZ2h0U3R5bGUsIGRhcmtTdHlsZSB9ID0gd2luZG93LmNvbmZpZy5kYXRhWyRtYXBib3guaWRdO1xuICAgICAgICBtYXBib3guc2V0U3R5bGUod2luZG93LmlzRGFyayA/IGRhcmtTdHlsZSA6IGxpZ2h0U3R5bGUpO1xuICAgICAgICBtYXBib3guYWRkQ29udHJvbChuZXcgTWFwYm94TGFuZ3VhZ2UoKSk7XG4gICAgICB9KTtcbiAgICB9O1xuICAgIHdpbmRvdy5zd2l0Y2hUaGVtZUV2ZW50U2V0LmFkZCh3aW5kb3cuX21hcGJveE9uU3dpdGNoVGhlbWUpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGluaXRUeXBlaXQoKSB7XG4gIGlmICh3aW5kb3cuY29uZmlnLnR5cGVpdCkge1xuICAgIGNvbnN0IHR5cGVpdENvbmZpZyA9IHdpbmRvdy5jb25maWcudHlwZWl0O1xuICAgIGNvbnN0IHNwZWVkID0gdHlwZWl0Q29uZmlnLnNwZWVkID8gdHlwZWl0Q29uZmlnLnNwZWVkIDogMTAwO1xuICAgIGNvbnN0IGN1cnNvclNwZWVkID0gdHlwZWl0Q29uZmlnLmN1cnNvclNwZWVkXG4gICAgICA/IHR5cGVpdENvbmZpZy5jdXJzb3JTcGVlZFxuICAgICAgOiAxMDAwO1xuICAgIGNvbnN0IGN1cnNvckNoYXIgPSB0eXBlaXRDb25maWcuY3Vyc29yQ2hhciA/IHR5cGVpdENvbmZpZy5jdXJzb3JDaGFyIDogXCJ8XCI7XG4gICAgT2JqZWN0LnZhbHVlcyh0eXBlaXRDb25maWcuZGF0YSkuZm9yRWFjaCgoZ3JvdXApID0+IHtcbiAgICAgIGNvbnN0IHR5cGVvbmUgPSAoaSkgPT4ge1xuICAgICAgICBjb25zdCBpZCA9IGdyb3VwW2ldO1xuICAgICAgICBpZiAoIWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKS5oYXNBdHRyaWJ1dGUoXCJkYXRhLXR5cGVpdC1pZFwiKSkge1xuICAgICAgICAgIGNvbnN0IGluc3RhbmNlID0gbmV3IFR5cGVJdChgIyR7aWR9YCwge1xuICAgICAgICAgICAgc3RyaW5nczogd2luZG93LmNvbmZpZy5kYXRhW2lkXSxcbiAgICAgICAgICAgIHNwZWVkLFxuICAgICAgICAgICAgbGlmZUxpa2U6IHRydWUsXG4gICAgICAgICAgICBjdXJzb3JTcGVlZCxcbiAgICAgICAgICAgIGN1cnNvckNoYXIsXG4gICAgICAgICAgICB3YWl0VW50aWxWaXNpYmxlOiB0cnVlLFxuICAgICAgICAgICAgYWZ0ZXJDb21wbGV0ZTogKCkgPT4ge1xuICAgICAgICAgICAgICBpZiAoaSA9PT0gZ3JvdXAubGVuZ3RoIC0gMSkge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlaXRDb25maWcuZHVyYXRpb24gPj0gMCkge1xuICAgICAgICAgICAgICAgICAgd2luZG93LnNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpbnN0YW5jZS5kZXN0cm95KCk7XG4gICAgICAgICAgICAgICAgICB9LCB0eXBlaXRDb25maWcuZHVyYXRpb24pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgaW5zdGFuY2UuZGVzdHJveSgpO1xuICAgICAgICAgICAgICB0eXBlb25lKGkgKyAxKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfSkuZ28oKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIHR5cGVvbmUoMCk7XG4gICAgfSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gaW5pdE1ldGEoKSB7XG4gIGZ1bmN0aW9uIGdldE1ldGEobWV0YU5hbWUpIHtcbiAgICBjb25zdCBtZXRhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwibWV0YVwiKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IG1ldGFzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAobWV0YXNbaV0uZ2V0QXR0cmlidXRlKFwibmFtZVwiKSA9PT0gbWV0YU5hbWUpIHtcbiAgICAgICAgcmV0dXJuIG1ldGFzW2ldO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBjb25zdCB0aGVtZUNvbG9yTWV0YSA9IGdldE1ldGEoXCJ0aGVtZS1jb2xvclwiKTtcbiAgY29uc3QgbWV0YUNvbG9ycyA9IHtcbiAgICBsaWdodDogXCIjZjhmOGY4XCIsXG4gICAgZGFyazogXCIjMTYxYjIyXCIsXG4gIH07XG4gIHdpbmRvdy5fbWV0YVRoZW1lQ29sb3JPblN3aXRjaFRoZW1lID0gKCkgPT4ge1xuICAgIHRoZW1lQ29sb3JNZXRhLmNvbnRlbnQgPSBtZXRhQ29sb3JzW2RvY3VtZW50LmJvZHkuZ2V0QXR0cmlidXRlKFwidGhlbWVcIildO1xuICB9O1xuICB3aW5kb3cuc3dpdGNoVGhlbWVFdmVudFNldC5hZGQod2luZG93Ll9tZXRhVGhlbWVDb2xvck9uU3dpdGNoVGhlbWUpO1xuICB3aW5kb3cuX21ldGFUaGVtZUNvbG9yT25Td2l0Y2hUaGVtZSgpO1xufVxuXG5mdW5jdGlvbiBvblNjcm9sbCgpIHtcbiAgY29uc3QgYmFja1RvVG9wID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJiYWNrLXRvLXRvcC1idXR0b25cIik7XG4gIGZ1bmN0aW9uIGhhbmRsZVNjcm9sbEV2ZW50KCkge1xuICAgIHdpbmRvdy5uZXdTY3JvbGxUb3AgPSBnZXRTY3JvbGxUb3AoKTtcbiAgICBpZiAod2luZG93Lm5ld1Njcm9sbFRvcCA+IDIwKSB7XG4gICAgICBiYWNrVG9Ub3Auc3R5bGUub3BhY2l0eSA9IFwiMVwiO1xuICAgIH0gZWxzZSB7XG4gICAgICBiYWNrVG9Ub3Auc3R5bGUub3BhY2l0eSA9IFwiMFwiO1xuICAgIH1cbiAgICBmb3IgKGNvbnN0IGV2ZW50IG9mIHdpbmRvdy5zY3JvbGxFdmVudFNldCkgZXZlbnQoKTtcbiAgICB3aW5kb3cub2xkU2Nyb2xsVG9wID0gd2luZG93Lm5ld1Njcm9sbFRvcDtcbiAgfVxuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInNjcm9sbFwiLCBoYW5kbGVTY3JvbGxFdmVudCwgZmFsc2UpO1xufVxuXG5mdW5jdGlvbiBvblJlc2l6ZSgpIHtcbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgXCJyZXNpemVcIixcbiAgICAoKSA9PiB7XG4gICAgICBpZiAoIXdpbmRvdy5fcmVzaXplVGltZW91dCkge1xuICAgICAgICB3aW5kb3cuX3Jlc2l6ZVRpbWVvdXQgPSB3aW5kb3cuc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgd2luZG93Ll9yZXNpemVUaW1lb3V0ID0gbnVsbDtcbiAgICAgICAgICBmb3IgKGNvbnN0IGV2ZW50IG9mIHdpbmRvdy5yZXNpemVFdmVudFNldCkgZXZlbnQoKTtcbiAgICAgICAgICBpbml0U2VhcmNoKCk7XG4gICAgICAgIH0sIDEwMCk7XG4gICAgICB9XG4gICAgfSxcbiAgICBmYWxzZSxcbiAgKTtcbn1cblxuZnVuY3Rpb24gb25DbGlja01hc2soKSB7XG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFza1wiKS5hZGRFdmVudExpc3RlbmVyKFxuICAgIFwiY2xpY2tcIixcbiAgICAoKSA9PiB7XG4gICAgICBmb3IgKGNvbnN0IGV2ZW50IG9mIHdpbmRvdy5jbGlja01hc2tFdmVudFNldCkgZXZlbnQoKTtcbiAgICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LnJlbW92ZShcImJsdXJcIik7XG4gICAgfSxcbiAgICBmYWxzZSxcbiAgKTtcbn1cblxuZnVuY3Rpb24gaW5pdENvZGVibG9ja3MoKSB7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuY29kZS1ibG9ja1wiKS5mb3JFYWNoKChjb2RlQmxvY2spID0+IHtcbiAgICAvLyB0aGUgcXVlcmllcyBhcmUgZ3VhcmFudGVlZCB0byBiZSBzdWNjZXNzZnVsXG4gICAgY29uc3QgdGl0bGVCYXIgPSBjb2RlQmxvY2sucXVlcnlTZWxlY3RvcihcbiAgICAgIFwiZGl2LmNvZGUtYmxvY2stdGl0bGUtYmFyXCIsXG4gICAgKSBhcyBIVE1MRGl2RWxlbWVudDtcbiAgICBjb25zdCBjaHJvbWEgPSBjb2RlQmxvY2sucXVlcnlTZWxlY3RvcihcImNvZGUuY2hyb21hXCIpIGFzIEhUTUxFbGVtZW50O1xuICAgIGNvbnN0IGNvcHlDb2RlQnV0dG9uID0gY29kZUJsb2NrLnF1ZXJ5U2VsZWN0b3IoXG4gICAgICBcImJ1dHRvbi5jb3B5LWNvZGUtYnV0dG9uXCIsXG4gICAgKSBhcyBIVE1MQnV0dG9uRWxlbWVudDtcbiAgICBjb25zdCBjb3B5SWNvbiA9IGNvcHlDb2RlQnV0dG9uLnF1ZXJ5U2VsZWN0b3IoXG4gICAgICBcInNwYW4uY29weS1pY29uXCIsXG4gICAgKSBhcyBTVkdFbGVtZW50O1xuICAgIGNvbnN0IGNoZWNrSWNvbiA9IGNvcHlDb2RlQnV0dG9uLnF1ZXJ5U2VsZWN0b3IoXG4gICAgICBcInNwYW4uY2hlY2staWNvblwiLFxuICAgICkgYXMgU1ZHRWxlbWVudDtcbiAgICBjb25zdCB3cmFwQ29kZUJ1dHRvbiA9IGNvZGVCbG9jay5xdWVyeVNlbGVjdG9yKFxuICAgICAgXCJidXR0b24ud3JhcC1jb2RlLWJ1dHRvblwiLFxuICAgICkgYXMgSFRNTEJ1dHRvbkVsZW1lbnQ7XG4gICAgY29uc3QgdG9nZ2xlTGluZU51bWJlcnNCdXR0b24gPSBjb2RlQmxvY2sucXVlcnlTZWxlY3RvcihcbiAgICAgIFwiYnV0dG9uLmxpbmUtbnVtYmVyLWJ1dHRvblwiLFxuICAgICkgYXMgSFRNTEJ1dHRvbkVsZW1lbnQ7XG5cbiAgICBjaHJvbWEuc3R5bGUubWF4SGVpZ2h0ID0gY2hyb21hLnNjcm9sbEhlaWdodCArIDEwICsgXCJweFwiO1xuXG4gICAgLy8gaGFuZGxlIGV4cGFuZGluZyBhbmQgY29sbGFwc2luZyBjb2RlIGJsb2Nrc1xuICAgIHRpdGxlQmFyLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICBjb2RlQmxvY2suY2xhc3NMaXN0LnRvZ2dsZShcImlzLW9wZW5cIik7XG4gICAgICBjb2RlQmxvY2suY2xhc3NMaXN0LnRvZ2dsZShcImlzLWNsb3NlZFwiKTtcbiAgICB9KTtcblxuICAgIC8vIGhhbmRsZSBjb3B5aW5nIGNvZGUgdG8gY2xpcGJvYXJkXG4gICAgY29weUNvZGVCdXR0b24/LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICBuYXZpZ2F0b3IuY2xpcGJvYXJkLndyaXRlVGV4dChjaHJvbWEudGV4dENvbnRlbnQpO1xuICAgICAgLy8gdG9nZ2xlIGljb25zXG4gICAgICBjb3B5SWNvbi5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICBjaGVja0ljb24uc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBjb3B5SWNvbi5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICAgICAgICBjaGVja0ljb24uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgfSwgMzAwMCk7XG4gICAgfSk7XG5cbiAgICAvLyBoYW5kbGUgd3JhcHBpbmcgbGluZXMgaW4gY29kZSBibG9ja3NcbiAgICB3cmFwQ29kZUJ1dHRvbj8uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIGNocm9tYS5zdHlsZS5tYXhIZWlnaHQgPSBcImZpdC1jb250ZW50XCI7XG4gICAgICBjb2RlQmxvY2suY2xhc3NMaXN0LnRvZ2dsZShcImlzLXdyYXBcIik7XG4gICAgICBjaHJvbWEuc3R5bGUubWF4SGVpZ2h0ID0gY2hyb21hLnNjcm9sbEhlaWdodCArIDEwICsgXCJweFwiO1xuICAgIH0pO1xuXG4gICAgdG9nZ2xlTGluZU51bWJlcnNCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIGNvZGVCbG9jay5jbGFzc0xpc3QudG9nZ2xlKFwic2hvdy1saW5lLW51bWJlcnNcIik7XG4gICAgfSk7XG5cbiAgICBhZGRFdmVudExpc3RlbmVyKFwiYmVmb3JlcHJpbnRcIiwgKF8pID0+IHtcbiAgICAgIGlmIChjb2RlQmxvY2suY2xhc3NMaXN0LmNvbnRhaW5zKFwiaXMtY2xvc2VkXCIpKSB7XG4gICAgICAgIHRpdGxlQmFyLmNsaWNrKCk7XG4gICAgICB9XG4gICAgICBpZiAoIWNvZGVCbG9jay5jbGFzc0xpc3QuY29udGFpbnMoXCJpcy13cmFwXCIpKSB7XG4gICAgICAgIHdyYXBDb2RlQnV0dG9uLmNsaWNrKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBpbml0KCkge1xuICB3aW5kb3cuaXNEYXJrID0gZG9jdW1lbnQuYm9keS5nZXRBdHRyaWJ1dGUoXCJ0aGVtZVwiKSAhPT0gXCJsaWdodFwiO1xuICB3aW5kb3cubmV3U2Nyb2xsVG9wID0gZ2V0U2Nyb2xsVG9wKCk7XG4gIHdpbmRvdy5vbGRTY3JvbGxUb3AgPSB3aW5kb3cubmV3U2Nyb2xsVG9wO1xuICB3aW5kb3cuc2Nyb2xsRXZlbnRTZXQgPSBuZXcgU2V0KCk7XG4gIHdpbmRvdy5yZXNpemVFdmVudFNldCA9IG5ldyBTZXQoKTtcbiAgd2luZG93LmNsaWNrTWFza0V2ZW50U2V0ID0gbmV3IFNldCgpO1xuICBpZiAod2luZG93Lm9iamVjdEZpdEltYWdlcykgb2JqZWN0Rml0SW1hZ2VzKCk7XG4gIGluaXRNZW51TW9iaWxlKCk7XG4gIGluaXRTd2l0Y2hUaGVtZSgpO1xuICBpbml0U2VsZWN0VGhlbWUoKTtcbiAgaW5pdE1ldGEoKTtcbiAgaW5pdFNlYXJjaCgpO1xuICBpbml0Q29kZWJsb2NrcygpO1xuICBpbml0RGV0YWlscygpO1xuICBpbml0TGlnaHRHYWxsZXJ5KCk7XG4gIGluaXRUYWJsZSgpO1xuICBpbml0VHlwZWl0KCk7XG4gIGluaXRNYXBib3goKTtcbiAgaW5pdFRvYygpO1xuICBvblNjcm9sbCgpO1xuICBvblJlc2l6ZSgpO1xuICBvbkNsaWNrTWFzaygpO1xufVxuXG5pbml0KCk7XG4iXSwKICAibWFwcGluZ3MiOiAib0VBQUEsSUFBQUEsRUFBQUMsRUFBQSxDQUFBQyxHQUFBQyxJQUFBLENBQUFBLEVBQU8sUUFBVSxPQUFPLFlDV3hCLElBQU1DLEVBQVksSUFHbEIsU0FBU0MsRUFBT0MsRUFBUSxDQUN0QixPQUFPQSxFQUNKLFFBQVEsS0FBTSxPQUFPLEVBQ3JCLFFBQVEsS0FBTSxNQUFNLEVBQ3BCLFFBQVEsS0FBTSxNQUFNLEVBQ3BCLFFBQVEsS0FBTSxRQUFRLEVBQ3RCLFFBQVEsS0FBTSxRQUFRLENBQzNCLENBRUEs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T0FBTyxhQUFlYixFQUFhLEVBQ25DLE9BQU8sYUFBZSxPQUFPLGFBQzdCLE9BQU8sZUFBaUIsSUFBSSxJQUM1QixPQUFPLGVBQWlCLElBQUksSUFDNUIsT0FBTyxrQkFBb0IsSUFBSSxJQUMzQixPQUFPLGlCQUFpQixnQkFBZ0IsRUFDNUN6SSxFQUFlLEVBQ2ZLLEVBQWdCLEVBQ2hCSSxFQUFnQixFQUNoQnVILEdBQVMsRUFDVHBILEVBQVcsRUFDWGdJLEdBQWUsRUFDZi9ELEdBQVksRUFDWkcsR0FBaUIsRUFDakJDLEdBQVUsRUFDVnVDLEdBQVcsRUFDWGIsR0FBVyxFQUNYckIsR0FBUSxFQUNSZ0QsR0FBUyxFQUNUSSxHQUFTLEVBQ1RDLEdBQVksQ0FDZCxDQUVBVyxHQUFLIiwKICAibmFtZXMiOiBbInJlcXVpcmVfdGFibGVzb3J0IiwgIl9fY29tbW9uSlNNaW4iLCAiZXhwb3J0cyIsICJtb2R1bGUiLCAiVGFibGVzb3J0IiwgImVzY2FwZSIsICJ1bnNhZmUiLCAiZm9yRWFjaCIsICJlbGVtZW50cyIsICJoYW5kbGVyIiwgImkiLCAiZ2V0U2Nyb2xsVG9wIiwgImluaXRNZW51TW9iaWxlIiwgIm1lbnVUb2dnbGVNb2JpbGUiLCAibWVudU1vYmlsZSIsICJzZXRDb2xvclRoZW1lIiwgInRoZW1lIiwgImluaXRTd2l0Y2hUaGVtZSIsICJ0aGVtZVN3aXRjaCIsICJjdXJyZW50VGhlbWUiLCAiZXZlbnQiLCAiaW5pdFNlbGVjdFRoZW1lIiwgInRoZW1lU2VsZWN0IiwgImoiLCAiaW5pdFNlYXJjaCIsICJzZWFyY2hDb25maWciLCAiaXNNb2JpbGUiLCAibWF4UmVzdWx0TGVuZ3RoIiwgInNuaXBwZXRMZW5ndGgiLCAiaGlnaGxpZ2h0VGFnIiwgImlzQ2FzZVNlbnNpdGl2ZSIsICJtaW5NYXRjaENoYXJMZW5ndGgiLCAiZmluZEFsbE1hdGNoZXMiLCAibG9jYXRpb24iLCAidGhyZXNob2xkIiwgImRpc3RhbmNlIiwgImlnbm9yZUxvY2F0aW9uIiwgInVzZUV4dGVuZGVkU2VhcmNoIiwgImlnbm9yZUZpZWxkTm9ybSIsICJzdWZmaXgiLCAiaGVhZGVyIiwgInNlYXJjaElucHV0IiwgInNlYXJjaFRvZ2dsZSIsICJzZWFyY2hMb2FkaW5nIiwgInNlYXJjaENsZWFyIiwgImF1dG9jb21wbGV0ZUpzIiwgImFsZ29saWFKcyIsICJmdXNlSnMiLCAibG9hZFNjcmlwdCIsICJpbml0QXV0b3NlYXJjaCIsICJlIiwgImF1dG9zZWFyY2giLCAicXVlcnkiLCAiY2FsbGJhY2siLCAiZmluaXNoIiwgInJlc3VsdHMiLCAiaGl0cyIsICJ1cmkiLCAiZGF0ZSIsICJ0aXRsZSIsICJjb250ZW50IiwgImVyciIsICJzZWFyY2giLCAiaXRlbSIsICJyZWZJbmRleCIsICJtYXRjaGVzIiwgImluZGljZXMiLCAidmFsdWUiLCAia2V5IiwgIm9mZnNldCIsICJpIiwgInN1YnN0ciIsICJ0YWciLCAicmVzcG9uc2UiLCAiZGF0YSIsICJvcHRpb25zIiwgImNvbnRleHQiLCAiZXNjYXBlIiwgInNlYXJjaFR5cGUiLCAiaWNvbiIsICJocmVmIiwgIl9zdWdnZXN0aW9uIiwgIl9kYXRhc2V0IiwgIl9jb250ZXh0IiwgImlkIiwgInVybCIsICJvbmxvYWQiLCAiaGVhZCIsICJzY3JpcHQiLCAiaW5pdERldGFpbHMiLCAiJGRldGFpbHMiLCAiJHN1bW1hcnkiLCAiaW5pdExpZ2h0R2FsbGVyeSIsICJpbml0VGFibGUiLCAiZm9yRWFjaCIsICIkdGFibGUiLCAiJHdyYXBwZXIiLCAiVGFibGVzb3J0IiwgImluaXRUb2MiLCAidG9jQ29yZSIsICJpc1RvY1N0YXRpYyIsICJ0b2MiLCAidG9jTGlua0VsZW1lbnRzIiwgInRvY0xpRWxlbWVudHMiLCAiaGVhZGVyTGlua0VsZW1lbnRzIiwgImhlYWRlcklzRml4ZWQiLCAiaGVhZGVySGVpZ2h0IiwgIlRPUF9TUEFDSU5HIiwgIm1pblRvY1RvcCIsICJtaW5TY3JvbGxUb3AiLCAibWF4VG9jVG9wIiwgIm1heFNjcm9sbFRvcCIsICJhY3RpdmVUb2NJbmRleCIsICJJTkRFWF9TUEFDSU5HIiwgInRoaXNUb3AiLCAibmV4dFRvcCIsICJ0b2NMaW5rIiwgInRvY0xpIiwgInBhcmVudCIsICJpbml0TWFwYm94IiwgIiRtYXBib3giLCAibG5nIiwgImxhdCIsICJ6b29tIiwgImxpZ2h0U3R5bGUiLCAiZGFya1N0eWxlIiwgIm1hcmtlZCIsICJuYXZpZ2F0aW9uIiwgImdlb2xvY2F0ZSIsICJzY2FsZSIsICJmdWxsc2NyZWVuIiwgIm1hcGJveCIsICJpbml0VHlwZWl0IiwgInR5cGVpdENvbmZpZyIsICJzcGVlZCIsICJjdXJzb3JTcGVlZCIsICJjdXJzb3JDaGFyIiwgImdyb3VwIiwgInR5cGVvbmUiLCAiaW5zdGFuY2UiLCAiaW5pdE1ldGEiLCAiZ2V0TWV0YSIsICJtZXRhTmFtZSIsICJtZXRhcyIsICJ0aGVtZUNvbG9yTWV0YSIsICJtZXRhQ29sb3JzIiwgIm9uU2Nyb2xsIiwgImJhY2tUb1RvcCIsICJoYW5kbGVTY3JvbGxFdmVudCIsICJnZXRTY3JvbGxUb3AiLCAib25SZXNpemUiLCAib25DbGlja01hc2siLCAiaW5pdENvZGVibG9ja3MiLCAiY29kZUJsb2NrIiwgInRpdGxlQmFyIiwgImNocm9tYSIsICJjb3B5Q29kZUJ1dHRvbiIsICJjb3B5SWNvbiIsICJjaGVja0ljb24iLCAid3JhcENvZGVCdXR0b24iLCAidG9nZ2xlTGluZU51bWJlcnNCdXR0b24iLCAiXyIsICJpbml0Il0KfQo=
